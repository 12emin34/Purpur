From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Fri, 5 Jun 2020 21:30:19 -0500
Subject: [PATCH] Timings stuff


diff --git a/src/main/java/co/aikar/timings/TimingsExport.java b/src/main/java/co/aikar/timings/TimingsExport.java
index da6a5b1b2f5203a0fab8e4fccd727951df7c9c9a..bca3bc0b8687940dff181bab6a5a2a3c11423358 100644
--- a/src/main/java/co/aikar/timings/TimingsExport.java
+++ b/src/main/java/co/aikar/timings/TimingsExport.java
@@ -226,10 +226,14 @@ public class TimingsExport extends Thread {
         // Information on the users Config
 
         parent.put("config", createObject(
-            pair("spigot", mapAsJSON(Bukkit.spigot().getSpigotConfig(), null)),
+            // Purpur start
+            pair("server.properties", mapAsJSON(Bukkit.spigot().getServerProperties())),
             pair("bukkit", mapAsJSON(Bukkit.spigot().getBukkitConfig(), null)),
+            pair("spigot", mapAsJSON(Bukkit.spigot().getSpigotConfig(), null)),
             pair("paper", mapAsJSON(Bukkit.spigot().getPaperConfig(), null)), // Airplane
-            pair("airplane", mapAsJSON(gg.airplane.AirplaneConfig.getConfigCopy(), null)) // Airplane
+            pair("airplane", mapAsJSON(gg.airplane.AirplaneConfig.getConfigCopy(), null)), // Airplane
+            pair("purpur", mapAsJSON(Bukkit.spigot().getPurpurConfig(), null))
+            // Purpur end
         ));
 
         new TimingsExport(listeners, parent, history).start();
@@ -270,6 +274,19 @@ public class TimingsExport extends Thread {
         return timingsCost;
     }
 
+    // Purpur start
+    private static JSONObject mapAsJSON(java.util.Properties properties) {
+        JSONObject object = new JSONObject();
+        for (String key : properties.stringPropertyNames()) {
+            if (key.startsWith("rcon") || key.startsWith("query") ||  key.equals("level-seed") || TimingsManager.hiddenConfigs.contains(key)) {
+                continue;
+            }
+            object.put(key, valAsJSON(properties.get(key), key));
+        }
+        return object;
+    }
+    // Purpur end
+
     private static JSONObject mapAsJSON(ConfigurationSection config, String parentKey) {
 
         JSONObject object = new JSONObject();
diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 3781e7c23347a5860c448a94bd01cb90979d9d4a..977363508e090ede5191f7dbc4c258bfb0a9c911 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -217,7 +217,7 @@ public class PaperConfig {
         timings = reallyEnableTimings;
         // Airplane end */ // Purpur end
         boolean verboseTimings = getBoolean("timings.verbose", true);
-        TimingsManager.url = getString("timings.url", "https://timings.aikar.co/");
+        TimingsManager.url = getString("timings.url", "https://timings.pl3x.net/");
         if (!TimingsManager.url.endsWith("/")) {
             TimingsManager.url += "/";
         }
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 41134227b3902f6e008f1db7b0803a1f81e7fd6e..b634d1a67b741feadf3f8fda5439a501fef3d132 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -161,4 +161,17 @@ public class PurpurConfig {
     private static void messages() {
         cannotRideMob = getString("settings.messages.cannot-ride-mob", cannotRideMob);
     }
+
+    private static void timingsSettings() {
+        if (version < 18) {
+            String oldVal = getString("settings.timings.url", "https://timings.pl3x.net");
+            com.destroystokyo.paper.PaperConfig.config.set("timings.url", oldVal);
+            TimingsManager.url = getString("timings.url", oldVal);
+            if (!TimingsManager.url.endsWith("/")) {
+                TimingsManager.url += "/";
+            }
+            set("settings.timings.url", null);
+        }
+        if (!co.aikar.timings.TimingsManager.hiddenConfigs.contains("server-ip")) co.aikar.timings.TimingsManager.hiddenConfigs.add("server-ip");
+    }
 }
