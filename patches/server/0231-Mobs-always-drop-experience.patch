From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <blake.galbreath@gmail.com>
Date: Tue, 21 Dec 2021 20:40:42 -0600
Subject: [PATCH] Mobs always drop experience


diff --git a/src/main/java/net/minecraft/world/entity/GlowSquid.java b/src/main/java/net/minecraft/world/entity/GlowSquid.java
index 7d5b34f69c3ceed3c350ae641eef87cc64c88b43..c2309434b4d48a44587590623ac98dbf997b9578 100644
--- a/src/main/java/net/minecraft/world/entity/GlowSquid.java
+++ b/src/main/java/net/minecraft/world/entity/GlowSquid.java
@@ -49,6 +49,11 @@ public class GlowSquid extends Squid {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.glowSquidTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.glowSquidAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index fe6fba48082d3cf54d4350f836a03cac83e1a45c..bfa1b84cba0dface99fcd3cf573be49f6f1f7d55 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -110,6 +110,11 @@ public class Bat extends AmbientCreature {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.batTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.batAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index 0c34cb85124c41decaba5fa54bb3abde9ba0adfe..86d49924f4fb5b38dfe7ec23a15e9bb5b2816543 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -229,6 +229,11 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.beeTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.beeAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index d7704daf437f7d30929728042b6b35bafdbc11e0..fe08d83a49efe5e1648cafc50e9184dbd0db2115 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -135,6 +135,11 @@ public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.catTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.catAlwaysDropExp;
+    }
     // Purpur end
 
     public ResourceLocation getResourceLocation() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 28e4c0c18dba0fc510886c9ed014cdb7c8579d2b..c5e81244331d76535028f8296d10939933010d09 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -87,6 +87,11 @@ public class Chicken extends Animal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.chickenTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.chickenAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cod.java b/src/main/java/net/minecraft/world/entity/animal/Cod.java
index abd24e7434712e806a14dc0e708a76aa03ba258f..2a45b487e5305e7c40cc8de4ddbb142af4b041de 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cod.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cod.java
@@ -33,6 +33,11 @@ public class Cod extends AbstractSchoolingFish {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.codTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.codAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index f6dc68ddea67e9573d2420c8f852b0920a64b1a3..54d9213d9de26a14a5ca770440d098bf0438373e 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -81,6 +81,11 @@ public class Cow extends Animal {
         this.isNaturallyAggressiveToPlayers = world.getLevel().purpurConfig.cowNaturallyAggressiveToPlayersChance > 0.0D && random.nextDouble() <= world.getLevel().purpurConfig.cowNaturallyAggressiveToPlayersChance;
         return super.finalizeSpawn(world, difficulty, spawnReason, entityData, entityNbt);
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.cowAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
index c038a23c4e19c5bf160792cf599acc8f66a7d571..a077edbe97ce89e11a26fe3ebeb0bdd996593f78 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
@@ -163,6 +163,11 @@ public class Dolphin extends WaterAnimal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.dolphinTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.dolphinAlwaysDropExp;
+    }
     // Purpur end
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index 87bdea86f8cbcdb91bbff0937a6a40ac06d03aab..f0eb5e0c01923f884b1c7c48e8d67ed5cd429854 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -194,6 +194,11 @@ public class Fox extends Animal implements VariantHolder<Fox.Type> {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.foxTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.foxAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
index ee6f351d9a1ca8f3ed4c3c0f414093025c5c8cb1..b5f445750a5ccbe7658396bdcc9648dc41f39ced 100644
--- a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
@@ -104,6 +104,11 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
     public void setSummoner(@Nullable UUID summoner) {
         this.summoner = summoner;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.ironGolemAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index dc56d475c052ef6176fadb7c5a165a5dfac0946c..55d0abd9344de528dffda7598045cc44861fc66d 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -93,6 +93,11 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.mooshroomTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.mooshroomAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
index 09c739d027aae3b4d0803f47db38a39fde0bc27e..f8d1afcd14ecc10b48b2902eb906872a81cca609 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
@@ -98,6 +98,11 @@ public class Ocelot extends Animal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.ocelotTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.ocelotAlwaysDropExp;
+    }
     // Purpur end
 
     public boolean isTrusting() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index 608b690b54b90a269c3690bd75934736d6d0afba..d1e45052fc96b6f81a331c6c73cb68ff96238359 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -148,6 +148,11 @@ public class Panda extends Animal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.pandaTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.pandaAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 09beb422127c563be0609a675d27caa852e809b9..8ca75f748ac7dcf872b5677648ba384992242a07 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -204,6 +204,11 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.parrotTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.parrotAlwaysDropExp;
+    }
     // Purpur end
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index ea1cfddf0da0a3f86d776c2935799d97d871f557..c6fe90852c88e138492c28296869308de8b8428f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -94,6 +94,11 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.pigTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.pigAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
index 390817adcfc5d5468492d3dae0396ffd6590b293..92437cd638f01506c09448bcd0d1ec6395c4cb07 100644
--- a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
+++ b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
@@ -128,6 +128,11 @@ public class PolarBear extends Animal implements NeutralMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.polarBearTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.polarBearAlwaysDropExp;
+    }
     // Purpur end
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index 76e2470fd7c8232ed699cb4ece9d0f73743914b6..d152c50f17e2ab7a37b0c295c7f62e63889b8b76 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -65,6 +65,11 @@ public class Pufferfish extends AbstractFish {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.pufferfishTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.pufferfishAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index 9e926d051459af28c94c9d70ddaf973f4086d053..3395bc1d9140ab5496ad998343a963ae12f630d6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -150,6 +150,11 @@ public class Rabbit extends Animal implements VariantHolder<Rabbit.Variant> {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.rabbitTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.rabbitAlwaysDropExp;
+    }
     // Purpur end
 
     // CraftBukkit start - code from constructor
diff --git a/src/main/java/net/minecraft/world/entity/animal/Salmon.java b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
index cea2f9b5760d82f244950e27ca6f4baed78ec01c..e0da8d1974f88e1426034620f78a29f9bdb5adf4 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Salmon.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
@@ -33,6 +33,11 @@ public class Salmon extends AbstractSchoolingFish {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.salmonTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.salmonAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index 76aabb33516cbe2d562e6ef1beec5d0eb13e7756..ecde7e3f3bbc511d152153082671ca67e0d960ba 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -146,6 +146,11 @@ public class Sheep extends Animal implements Shearable {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.sheepTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.sheepAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 659bded9afe97a73f1408b80769691a602c16174..69bb4f84dd539600576aa691d750fc371dd9b9bb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -84,6 +84,11 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
     public void setSummoner(@Nullable java.util.UUID summoner) {
         this.summoner = summoner;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.snowGolemAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index f8eef39f269ede559fb5fd4db631f2fb5dadc995..2a2b56940cd39ca0f14dc8246b41cf6640caa3bd 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -95,6 +95,11 @@ public class Squid extends WaterAnimal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.squidTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.squidAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
index ce5fd177521780176708fd0b97f1d57cbd5cb1e4..e4b4bf5ef228c0460fdab966d4c9b5c428f78b9a 100644
--- a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
@@ -62,6 +62,11 @@ public class TropicalFish extends AbstractSchoolingFish implements VariantHolder
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.tropicalFishTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.tropicalFishAlwaysDropExp;
+    }
     // Purpur end
 
     public static String getPredefinedName(int variant) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 73ab521052724cb97ba96b9777b6b2cb69ae0d5e..52eff7a4d3a34a566bc3bc03e6643c494c757156 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -113,6 +113,11 @@ public class Turtle extends Animal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.turtleTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.turtleAlwaysDropExp;
+    }
     // Purpur end
 
     public void setHomePos(BlockPos pos) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Wolf.java b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
index e2109e66a8ab205d7c33adeca58844184b45d1d1..e0ca657b0aea52ab6a91c256c1bfad1e5028f6e0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Wolf.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
@@ -212,6 +212,11 @@ public class Wolf extends TamableAnimal implements NeutralMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.wolfTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.wolfAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
index 1a7eaa2477c611b08619e95a63ac9d83e8662122..ca559f1871abaee97fe488a2c57b5247f5a161fb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -128,6 +128,11 @@ public class Axolotl extends Animal implements LerpingModel, VariantHolder<Axolo
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.axolotlTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.axolotlAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index d57f5366ee80b1eb8acdf9edb6cb7a757d5a891d..cb55b8479f8874ff2fa0941e277c4891cf3fe8d9 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -114,6 +114,11 @@ public class Goat extends Animal {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.goatTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.goatAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
index d6d8d00bbb25638fccb43ae9a153f0fb828cf99c..7ad29aacc73ca1cb98b76ad36b92a3edb2256629 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
@@ -45,6 +45,11 @@ public class Donkey extends AbstractChestedHorse {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.donkeyTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.donkeyAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
index a3c1f0ce5118e75321b28e65d6ffae2c77314917..fb433878731b824b4d595b7f28626f25bdfabbeb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
@@ -70,6 +70,11 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.horseTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.horseAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index 0a2adbda0f1c4c6e3695ee39af687f69663f3ae4..309fd5bccadcc584354d328bd31a6f4591c2d0a0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -146,6 +146,11 @@ public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.V
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.llamaTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.llamaAlwaysDropExp;
+    }
     // Purpur end
 
     public boolean isTraderLlama() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
index edf3d35cebd3c48e4c2598a0b4ee15be885be625..59f1acea8990ad4e9d3a71f6f1c790c4356169f0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
@@ -44,6 +44,11 @@ public class Mule extends AbstractChestedHorse {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.muleTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.muleAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
index 0cb8982a159bc30c9601082347decd89815af9ee..ac3f8e004445dde937625ecaad7d51a3576e37d3 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
@@ -58,6 +58,11 @@ public class SkeletonHorse extends AbstractHorse {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.skeletonHorseTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.skeletonHorseAlwaysDropExp;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
index 5bae585bb21f6e1a72964706a8b990dc6851b30d..834ab8bc597a5fb195e94454c0f9b81cf4c7e0f3 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -72,6 +72,11 @@ public class TraderLlama extends Llama {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.traderLlamaTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.traderLlamaAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
index 78eb44e299689f9532009d3a312555e8d8d24f1d..ae663a9b32c281f745592afa614f55c0280b4c58 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
@@ -56,6 +56,11 @@ public class ZombieHorse extends AbstractHorse {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.zombieHorseTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.zombieHorseAlwaysDropExp;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
index b746f793228560275e2a50bd2342f20dabc78941..4781bdd3b6c7d6b686f2fe6af530e82861385342 100644
--- a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -249,6 +249,11 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
     public void setSummoner(@Nullable java.util.UUID summoner) {
         this.summoner = summoner;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.witherAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Blaze.java b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
index 11ffc0885cb243455e9cf1501549b2addf0250ae..2ad81368f731a937303f17ede20f18c978b6479c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Blaze.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
@@ -77,6 +77,11 @@ public class Blaze extends Monster {
     public void initAttributes() {
         this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.blazeMaxHealth);
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.blazeAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
index 30ffadc5b45f00094cdd5cac542758da3dba1a26..d23141c44a11050de6ffd12d95a0c2820c3f71e3 100644
--- a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
@@ -53,6 +53,11 @@ public class CaveSpider extends Spider {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.caveSpiderTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.caveSpiderAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Creeper.java b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
index 095b46134c8f8f686edd9c343d9ce1a445fd5438..c32eda28be3eb2c6a6933463d496ea7b6510f27e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Creeper.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
@@ -164,6 +164,11 @@ public class Creeper extends Monster implements PowerableMob {
         }
         return super.dropAllDeathLoot(damagesource);
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.creeperAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Drowned.java b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
index 7a348d243f2a39c4e3faa1995eaf3f0cb0743070..a6980d85455234d4f89ff423e013f3c479bd3fe8 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Drowned.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
@@ -114,6 +114,11 @@ public class Drowned extends Zombie implements RangedAttackMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.drownedTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.drownedAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
index 0217eebab2bac9f647ec00888190fafb7c741497..916cf5137808003058a787210fc3343d75caf3d9 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
@@ -53,6 +53,11 @@ public class ElderGuardian extends Guardian {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.elderGuardianTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.elderGuardianAlwaysDropExp;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 0cb3a52990eb17339fbd61e1649a277438a2f1a2..7c26e1979cdae52e2e94d24dd8c3164e815226ab 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -112,6 +112,11 @@ public class EnderMan extends Monster implements NeutralMob {
     public void initAttributes() {
         this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.endermanMaxHealth);
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.endermanAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Endermite.java b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
index 8fabc1e276a399bcdc52de2a50c89a1eedebb156..e6ecc47828fea09c80ed3a4c39f0d85f4d820571 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Endermite.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
@@ -71,6 +71,11 @@ public class Endermite extends Monster {
     public void setPlayerSpawned(boolean playerSpawned) {
         this.isPlayerSpawned = playerSpawned;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.endermiteAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Evoker.java b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
index 8fbfd60a9c0397f155b89c60bcbd01950a49b679..892e0c0306a21ea638649c1324b8115f24c01bd2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Evoker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
@@ -73,6 +73,11 @@ public class Evoker extends SpellcasterIllager {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.evokerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.evokerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ghast.java b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
index e2ed36a72aad72ef70a35f557359ac4400a290c5..77dcae6ecd87fade2b529386ba1360836363593a 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ghast.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
@@ -86,6 +86,11 @@ public class Ghast extends FlyingMob implements Enemy {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.ghastTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.ghastAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index cdc431608384b04b480a9cfdc603a28a178e3dd2..4e5b9f772ba587b4e108add3758dffa665c1c3f3 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -112,6 +112,11 @@ public class Giant extends Monster {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.giantTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.giantAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Guardian.java b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
index 85a075b8224feed2daaa9978d3a1d23f1334ce6f..f10304b38e904528907cb36c342acf9d49935edd 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Guardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
@@ -101,6 +101,11 @@ public class Guardian extends Monster {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.guardianTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.guardianAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Husk.java b/src/main/java/net/minecraft/world/entity/monster/Husk.java
index 7d40c970990241d39b22196e9af6354ab2a2c66b..a7b690c0730d0b10133f24d7ce2d9f6a0e4a7c04 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Husk.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Husk.java
@@ -68,6 +68,11 @@ public class Husk extends Zombie {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.huskTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.huskAlwaysDropExp;
+    }
     // Purpur end
 
     public static boolean checkHuskSpawnRules(EntityType<Husk> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
index 88fd378b6b8bb92b793f1cf84b63faed6e02894b..63577d941dbd21cf93bc6f88bb50922618b6b5d5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
@@ -86,6 +86,11 @@ public class Illusioner extends SpellcasterIllager implements RangedAttackMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.illusionerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.illusionerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
index 7f2406a3174c3961705a4ea838541e3163352a4d..11af95207f5aff52427dc216fb9929b0f536f411 100644
--- a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
+++ b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
@@ -70,6 +70,11 @@ public class MagmaCube extends Slime {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.magmaCubeTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.magmaCubeAlwaysDropExp;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Phantom.java b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
index ac94212c2c844f3d426b16a7f3b4a44707389916..b4e13b4e02c37f5ff93164f01604e7e56580be72 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Phantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
@@ -157,6 +157,11 @@ public class Phantom extends FlyingMob implements Enemy {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.phantomTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.phantomAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Pillager.java b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
index be9038318a072008046119852256e0e593950652..06a96eb0ef40462932892c611f308eb31411d099 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Pillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
@@ -87,6 +87,11 @@ public class Pillager extends AbstractIllager implements CrossbowAttackMob, Inve
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.pillagerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.pillagerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index 6798e9b616a3357ce68728395cb43344b9e16889..0099595a5daa9c0ca9e3fd35933038c1c8ecf009 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -96,6 +96,11 @@ public class Ravager extends Raider {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.ravagerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.ravagerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index 8825407882bbfe1b92b4da384bc0f0a3d2853acf..8b03a027bff592b2257e065f328da6d86e11db98 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -140,6 +140,11 @@ public class Shulker extends AbstractGolem implements VariantHolder<Optional<Dye
         }
         return super.mobInteract(player, hand);
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.shulkerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
index a178fea77d57a376bbcfd9972889216df7644c53..202fe776c9275571138aabd230bec2fa0a985bb1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
@@ -67,6 +67,11 @@ public class Silverfish extends Monster {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.silverfishTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.silverfishAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
index 5a0da8e762a3d735243da2cc9c1b076c6acd9e7b..78fc17c45e566e0844ffbebb85044b9bfe64c6db 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
@@ -51,6 +51,11 @@ public class Skeleton extends AbstractSkeleton {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.skeletonTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.skeletonAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Slime.java b/src/main/java/net/minecraft/world/entity/monster/Slime.java
index d8f017c65b089e2fe5b8c6f2e8daa7fab528586e..89978fcb14362af2527693f3e6ec57e169080c9f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Slime.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Slime.java
@@ -140,6 +140,11 @@ public class Slime extends Mob implements Enemy {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.slimeTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.slimeAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Spider.java b/src/main/java/net/minecraft/world/entity/monster/Spider.java
index 3442ad5fe9e73287fbc7b8e85fb0b36fae967ad5..8e071a0922164970e033029c12058db9e8da261a 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Spider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Spider.java
@@ -76,6 +76,11 @@ public class Spider extends Monster {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.spiderTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.spiderAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Stray.java b/src/main/java/net/minecraft/world/entity/monster/Stray.java
index b6cd2a83ad58be7fcb2cfcb42c068af65da0b297..677b304c177a1e2bdaddf3044b44a06395ee6b6e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Stray.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Stray.java
@@ -46,6 +46,11 @@ public class Stray extends AbstractSkeleton {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.strayTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.strayAlwaysDropExp;
+    }
     // Purpur end
 
     public static boolean checkStraySpawnRules(EntityType<Stray> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index 1282974c939a5e5d64240ca2e1621967826b7ab5..0b5d3837536d526c25ba1e12be142bb476d03519 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -125,6 +125,11 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
     public int getPurpurBreedTime() {
         return this.level.purpurConfig.striderBreedingTicks;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.striderAlwaysDropExp;
+    }
     // Purpur end
 
     public static boolean checkStriderSpawnRules(EntityType<Strider> type, LevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vex.java b/src/main/java/net/minecraft/world/entity/monster/Vex.java
index 3c6618dc24b39b1913b39c2fce5f8cad47cb278a..4c4c4d52e2be963024106783b4d28713f125e2e6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vex.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vex.java
@@ -115,6 +115,11 @@ public class Vex extends Monster implements TraceableEntity {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.vexTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.vexAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
index 7887a05bdf913d54e6d5dae32a222cbd83702fcc..1a333dce35a13b88cb0afdea192585e0bae38442 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
@@ -83,6 +83,11 @@ public class Vindicator extends AbstractIllager {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.vindicatorTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.vindicatorAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Witch.java b/src/main/java/net/minecraft/world/entity/monster/Witch.java
index 9a54977f2262c6c451a9450c235ef653889189ce..dcf8cdb8343706b55df206fed70fe3a8373e27a6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Witch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Witch.java
@@ -82,6 +82,11 @@ public class Witch extends Raider implements RangedAttackMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.witchTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.witchAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
index 21f62b3b058e0f87c9efc67eef6d6632b6a4f8ad..9016fb6da9c86ca9906f6beb2f6927cede50c804 100644
--- a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
@@ -60,6 +60,11 @@ public class WitherSkeleton extends AbstractSkeleton {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.witherSkeletonTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.witherSkeletonAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index ce0111bea1074dec55031ce83f2f0cfceb3117c1..d7b76ae05754e0ccbddb4bfd5f545b9e0ca6c3a1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -92,6 +92,11 @@ public class Zoglin extends Monster implements Enemy, HoglinBase {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.zoglinTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.zoglinAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index d2ab6c240bc45f1c19ade78a7c0509306a31b1bd..36d37e544e342e1bc584374580dbb5c883523204 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -144,6 +144,11 @@ public class Zombie extends Monster {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.zombieTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.zombieAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
index 87556ffdfb93eba9c84931b1f922b9369442ea32..0c6e8e05014125427513e96c32510125ec34ece9 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -124,6 +124,11 @@ public class ZombieVillager extends Zombie implements VillagerDataHolder {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.zombieVillagerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.zombieVillagerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
index 381238699f534ddc029e349d62cc11409995e6b3..d3bcfa017967db0a20c18c65e27c2a0471d2214e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -103,6 +103,11 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.zombifiedPiglinTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.zombifiedPiglinAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index 1eec03b11284c347952ab400a7fdf083dc47e4b6..f03b8721991810c50887e24171a45d8f37fea446 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -97,6 +97,11 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.hoglinTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.hoglinAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index 9c4b65dcb34adb2e6f144b17b8b66bd3cf677020..5ad6b780a0f8e27eb49c2606fed6dc3e73a30aaa 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -122,6 +122,11 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.piglinTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.piglinAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
index 3b4cc6bc55482ae703e73d585916c179f5b7b540..85592cffdd04bdab9b2d39cf168a5c920471ba7b 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
@@ -66,6 +66,11 @@ public class PiglinBrute extends AbstractPiglin {
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.piglinBruteTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.piglinBruteAlwaysDropExp;
+    }
     // Purpur end
 
     public static AttributeSupplier.Builder createAttributes() {
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 2e759f0b3766377c65608deb3d1859c7924159f5..5d1749f4bc5288661c4f0fffdae0aa5e96f0a12d 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -191,6 +191,11 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.villagerTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.villagerAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
index 6af1d1b3b40d91fd3e0ac269d0e4a60a104be7b8..fef9fd3e50bba3d0fffa3d61b60f3bb8cad081e0 100644
--- a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
+++ b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
@@ -99,6 +99,11 @@ public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVill
     public boolean isSensitiveToWater() {
         return this.level.purpurConfig.wanderingTraderTakeDamageFromWater;
     }
+
+    @Override
+    protected boolean isAlwaysExperienceDropper() {
+        return this.level.purpurConfig.wanderingTraderAlwaysDropExp;
+    }
     // Purpur end
 
     @Override
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index 0e0cc6bc1b32b64b9776d88cbcbf83913af20f33..223a20d6aa5c1d7f50da1d1df237687e18eb4bdc 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -1027,12 +1027,14 @@ public class PurpurWorldConfig {
     public double axolotlMaxHealth = 14.0D;
     public int axolotlBreedingTicks = 6000;
     public boolean axolotlTakeDamageFromWater = false;
+    public boolean axolotlAlwaysDropExp = false;
     private void axolotlSettings() {
         axolotlRidable = getBoolean("mobs.axolotl.ridable", axolotlRidable);
         axolotlControllable = getBoolean("mobs.axolotl.controllable", axolotlControllable);
         axolotlMaxHealth = getDouble("mobs.axolotl.attributes.max_health", axolotlMaxHealth);
         axolotlBreedingTicks = getInt("mobs.axolotl.breeding-delay-ticks", axolotlBreedingTicks);
         axolotlTakeDamageFromWater = getBoolean("mobs.axolotl.takes-damage-from-water", axolotlTakeDamageFromWater);
+        axolotlAlwaysDropExp = getBoolean("mobs.axolotl.always-drop-exp", axolotlAlwaysDropExp);
     }
 
     public boolean batRidable = false;
@@ -1048,6 +1050,7 @@ public class PurpurWorldConfig {
     public double batArmorToughness = 0.0D;
     public double batAttackKnockback = 0.0D;
     public boolean batTakeDamageFromWater = false;
+    public boolean batAlwaysDropExp = false;
     private void batSettings() {
         batRidable = getBoolean("mobs.bat.ridable", batRidable);
         batRidableInWater = getBoolean("mobs.bat.ridable-in-water", batRidableInWater);
@@ -1060,6 +1063,7 @@ public class PurpurWorldConfig {
         }
         batMaxHealth = getDouble("mobs.bat.attributes.max_health", batMaxHealth);
         batTakeDamageFromWater = getBoolean("mobs.bat.takes-damage-from-water", batTakeDamageFromWater);
+        batAlwaysDropExp = getBoolean("mobs.bat.always-drop-exp", batAlwaysDropExp);
     }
 
     public boolean beeRidable = false;
@@ -1071,6 +1075,7 @@ public class PurpurWorldConfig {
     public boolean beeTakeDamageFromWater = false;
     public boolean beeCanWorkAtNight = false;
     public boolean beeCanWorkInRain = false;
+    public boolean beeAlwaysDropExp = false;
     private void beeSettings() {
         beeRidable = getBoolean("mobs.bee.ridable", beeRidable);
         beeRidableInWater = getBoolean("mobs.bee.ridable-in-water", beeRidableInWater);
@@ -1086,6 +1091,7 @@ public class PurpurWorldConfig {
         beeTakeDamageFromWater = getBoolean("mobs.bee.takes-damage-from-water", beeTakeDamageFromWater);
         beeCanWorkAtNight = getBoolean("mobs.bee.can-work-at-night", beeCanWorkAtNight);
         beeCanWorkInRain = getBoolean("mobs.bee.can-work-in-rain", beeCanWorkInRain);
+        beeAlwaysDropExp = getBoolean("mobs.bee.always-drop-exp", beeAlwaysDropExp);
     }
 
     public boolean blazeRidable = false;
@@ -1094,6 +1100,7 @@ public class PurpurWorldConfig {
     public double blazeMaxY = 320D;
     public double blazeMaxHealth = 20.0D;
     public boolean blazeTakeDamageFromWater = true;
+    public boolean blazeAlwaysDropExp = false;
     private void blazeSettings() {
         blazeRidable = getBoolean("mobs.blaze.ridable", blazeRidable);
         blazeRidableInWater = getBoolean("mobs.blaze.ridable-in-water", blazeRidableInWater);
@@ -1106,6 +1113,7 @@ public class PurpurWorldConfig {
         }
         blazeMaxHealth = getDouble("mobs.blaze.attributes.max_health", blazeMaxHealth);
         blazeTakeDamageFromWater = getBoolean("mobs.blaze.takes-damage-from-water", blazeTakeDamageFromWater);
+        blazeAlwaysDropExp = getBoolean("mobs.blaze.always-drop-exp", blazeAlwaysDropExp);
     }
 
     public int camelBreedingTicks = 6000;
@@ -1135,6 +1143,7 @@ public class PurpurWorldConfig {
     public int catBreedingTicks = 6000;
     public DyeColor catDefaultCollarColor = DyeColor.RED;
     public boolean catTakeDamageFromWater = false;
+    public boolean catAlwaysDropExp = false;
     private void catSettings() {
         catRidable = getBoolean("mobs.cat.ridable", catRidable);
         catRidableInWater = getBoolean("mobs.cat.ridable-in-water", catRidableInWater);
@@ -1155,6 +1164,7 @@ public class PurpurWorldConfig {
             catDefaultCollarColor = DyeColor.RED;
         }
         catTakeDamageFromWater = getBoolean("mobs.cat.takes-damage-from-water", catTakeDamageFromWater);
+        catAlwaysDropExp = getBoolean("mobs.cat.always-drop-exp", catAlwaysDropExp);
     }
 
     public boolean caveSpiderRidable = false;
@@ -1162,6 +1172,7 @@ public class PurpurWorldConfig {
     public boolean caveSpiderControllable = true;
     public double caveSpiderMaxHealth = 12.0D;
     public boolean caveSpiderTakeDamageFromWater = false;
+    public boolean caveSpiderAlwaysDropExp = false;
     private void caveSpiderSettings() {
         caveSpiderRidable = getBoolean("mobs.cave_spider.ridable", caveSpiderRidable);
         caveSpiderRidableInWater = getBoolean("mobs.cave_spider.ridable-in-water", caveSpiderRidableInWater);
@@ -1173,6 +1184,7 @@ public class PurpurWorldConfig {
         }
         caveSpiderMaxHealth = getDouble("mobs.cave_spider.attributes.max_health", caveSpiderMaxHealth);
         caveSpiderTakeDamageFromWater = getBoolean("mobs.cave_spider.takes-damage-from-water", caveSpiderTakeDamageFromWater);
+        caveSpiderAlwaysDropExp = getBoolean("mobs.cave_spider.always-drop-exp", caveSpiderAlwaysDropExp);
     }
 
     public boolean chickenRidable = false;
@@ -1182,6 +1194,7 @@ public class PurpurWorldConfig {
     public boolean chickenRetaliate = false;
     public int chickenBreedingTicks = 6000;
     public boolean chickenTakeDamageFromWater = false;
+    public boolean chickenAlwaysDropExp = false;
     private void chickenSettings() {
         chickenRidable = getBoolean("mobs.chicken.ridable", chickenRidable);
         chickenRidableInWater = getBoolean("mobs.chicken.ridable-in-water", chickenRidableInWater);
@@ -1195,12 +1208,14 @@ public class PurpurWorldConfig {
         chickenRetaliate = getBoolean("mobs.chicken.retaliate", chickenRetaliate);
         chickenBreedingTicks = getInt("mobs.chicken.breeding-delay-ticks", chickenBreedingTicks);
         chickenTakeDamageFromWater = getBoolean("mobs.chicken.takes-damage-from-water", chickenTakeDamageFromWater);
+        chickenAlwaysDropExp = getBoolean("mobs.chicken.always-drop-exp", chickenAlwaysDropExp);
     }
 
     public boolean codRidable = false;
     public boolean codControllable = true;
     public double codMaxHealth = 3.0D;
     public boolean codTakeDamageFromWater = false;
+    public boolean codAlwaysDropExp = false;
     private void codSettings() {
         codRidable = getBoolean("mobs.cod.ridable", codRidable);
         codControllable = getBoolean("mobs.cod.controllable", codControllable);
@@ -1211,6 +1226,7 @@ public class PurpurWorldConfig {
         }
         codMaxHealth = getDouble("mobs.cod.attributes.max_health", codMaxHealth);
         codTakeDamageFromWater = getBoolean("mobs.cod.takes-damage-from-water", codTakeDamageFromWater);
+        codAlwaysDropExp = getBoolean("mobs.cod.always-drop-exp", codAlwaysDropExp);
     }
 
     public boolean cowRidable = false;
@@ -1222,6 +1238,7 @@ public class PurpurWorldConfig {
     public boolean cowTakeDamageFromWater = false;
     public double cowNaturallyAggressiveToPlayersChance = 0.0D;
     public double cowNaturallyAggressiveToPlayersDamage = 2.0D;
+    public boolean cowAlwaysDropExp = false;
     private void cowSettings() {
         if (PurpurConfig.version < 22) {
             double oldValue = getDouble("mobs.cow.naturally-aggressive-to-players-chance", cowNaturallyAggressiveToPlayersChance);
@@ -1242,6 +1259,7 @@ public class PurpurWorldConfig {
         cowTakeDamageFromWater = getBoolean("mobs.cow.takes-damage-from-water", cowTakeDamageFromWater);
         cowNaturallyAggressiveToPlayersChance = getDouble("mobs.cow.naturally-aggressive-to-players.chance", cowNaturallyAggressiveToPlayersChance);
         cowNaturallyAggressiveToPlayersDamage = getDouble("mobs.cow.naturally-aggressive-to-players.damage", cowNaturallyAggressiveToPlayersDamage);
+        cowAlwaysDropExp = getBoolean("mobs.cow.always-drop-exp", cowAlwaysDropExp);
     }
 
     public boolean creeperRidable = false;
@@ -1254,6 +1272,7 @@ public class PurpurWorldConfig {
     public boolean creeperTakeDamageFromWater = false;
     public boolean creeperExplodeWhenKilled = false;
     public boolean creeperHealthRadius = false;
+    public boolean creeperAlwaysDropExp = false;
     private void creeperSettings() {
         creeperRidable = getBoolean("mobs.creeper.ridable", creeperRidable);
         creeperRidableInWater = getBoolean("mobs.creeper.ridable-in-water", creeperRidableInWater);
@@ -1270,6 +1289,7 @@ public class PurpurWorldConfig {
         creeperTakeDamageFromWater = getBoolean("mobs.creeper.takes-damage-from-water", creeperTakeDamageFromWater);
         creeperExplodeWhenKilled = getBoolean("mobs.creeper.explode-when-killed", creeperExplodeWhenKilled);
         creeperHealthRadius = getBoolean("mobs.creeper.health-impacts-explosion", creeperHealthRadius);
+        creeperAlwaysDropExp = getBoolean("mobs.creeper.always-drop-exp", creeperAlwaysDropExp);
     }
 
     public boolean dolphinRidable = false;
@@ -1281,6 +1301,7 @@ public class PurpurWorldConfig {
     public boolean dolphinDisableTreasureSearching = false;
     public boolean dolphinTakeDamageFromWater = false;
     public double dolphinNaturallyAggressiveToPlayersChance = 0.0D;
+    public boolean dolphinAlwaysDropExp = false;
     private void dolphinSettings() {
         dolphinRidable = getBoolean("mobs.dolphin.ridable", dolphinRidable);
         dolphinControllable = getBoolean("mobs.dolphin.controllable", dolphinControllable);
@@ -1296,6 +1317,7 @@ public class PurpurWorldConfig {
         dolphinDisableTreasureSearching = getBoolean("mobs.dolphin.disable-treasure-searching", dolphinDisableTreasureSearching);
         dolphinTakeDamageFromWater = getBoolean("mobs.dolphin.takes-damage-from-water", dolphinTakeDamageFromWater);
         dolphinNaturallyAggressiveToPlayersChance = getDouble("mobs.dolphin.naturally-aggressive-to-players-chance", dolphinNaturallyAggressiveToPlayersChance);
+        dolphinAlwaysDropExp = getBoolean("mobs.dolphin.always-drop-exp", dolphinAlwaysDropExp);
     }
 
     public boolean donkeyRidableInWater = false;
@@ -1307,6 +1329,7 @@ public class PurpurWorldConfig {
     public double donkeyMovementSpeedMax = 0.175D;
     public int donkeyBreedingTicks = 6000;
     public boolean donkeyTakeDamageFromWater = false;
+    public boolean donkeyAlwaysDropExp = false;
     private void donkeySettings() {
         donkeyRidableInWater = getBoolean("mobs.donkey.ridable-in-water", donkeyRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1324,6 +1347,7 @@ public class PurpurWorldConfig {
         donkeyMovementSpeedMax = getDouble("mobs.donkey.attributes.movement_speed.max", donkeyMovementSpeedMax);
         donkeyBreedingTicks = getInt("mobs.donkey.breeding-delay-ticks", donkeyBreedingTicks);
         donkeyTakeDamageFromWater = getBoolean("mobs.donkey.takes-damage-from-water", donkeyTakeDamageFromWater);
+        donkeyAlwaysDropExp = getBoolean("mobs.donkey.always-drop-exp", donkeyAlwaysDropExp);
     }
 
     public boolean drownedRidable = false;
@@ -1336,6 +1360,7 @@ public class PurpurWorldConfig {
     public boolean drownedJockeyTryExistingChickens = true;
     public boolean drownedTakeDamageFromWater = false;
     public boolean drownedBreakDoors = false;
+    public boolean drownedAlwaysDropExp = false;
     private void drownedSettings() {
         drownedRidable = getBoolean("mobs.drowned.ridable", drownedRidable);
         drownedRidableInWater = getBoolean("mobs.drowned.ridable-in-water", drownedRidableInWater);
@@ -1352,12 +1377,14 @@ public class PurpurWorldConfig {
         drownedJockeyTryExistingChickens = getBoolean("mobs.drowned.jockey.try-existing-chickens", drownedJockeyTryExistingChickens);
         drownedTakeDamageFromWater = getBoolean("mobs.drowned.takes-damage-from-water", drownedTakeDamageFromWater);
         drownedBreakDoors = getBoolean("mobs.drowned.can-break-doors", drownedBreakDoors);
+        drownedAlwaysDropExp = getBoolean("mobs.drowned.always-drop-exp", drownedAlwaysDropExp);
     }
 
     public boolean elderGuardianRidable = false;
     public boolean elderGuardianControllable = true;
     public double elderGuardianMaxHealth = 80.0D;
     public boolean elderGuardianTakeDamageFromWater = false;
+    public boolean elderGuardianAlwaysDropExp = false;
     private void elderGuardianSettings() {
         elderGuardianRidable = getBoolean("mobs.elder_guardian.ridable", elderGuardianRidable);
         elderGuardianControllable = getBoolean("mobs.elder_guardian.controllable", elderGuardianControllable);
@@ -1368,6 +1395,7 @@ public class PurpurWorldConfig {
         }
         elderGuardianMaxHealth = getDouble("mobs.elder_guardian.attributes.max_health", elderGuardianMaxHealth);
         elderGuardianTakeDamageFromWater = getBoolean("mobs.elder_guardian.takes-damage-from-water", elderGuardianTakeDamageFromWater);
+        elderGuardianAlwaysDropExp = getBoolean("mobs.elder_guardian.always-drop-exp", elderGuardianAlwaysDropExp);
     }
 
     public boolean enderDragonRidable = false;
@@ -1413,6 +1441,7 @@ public class PurpurWorldConfig {
     public boolean endermanIgnorePlayerDragonHead = false;
     public boolean endermanDisableStareAggro = false;
     public boolean endermanIgnoreProjectiles = false;
+    public boolean endermanAlwaysDropExp = false;
     private void endermanSettings() {
         endermanRidable = getBoolean("mobs.enderman.ridable", endermanRidable);
         endermanRidableInWater = getBoolean("mobs.enderman.ridable-in-water", endermanRidableInWater);
@@ -1436,6 +1465,7 @@ public class PurpurWorldConfig {
         endermanIgnorePlayerDragonHead = getBoolean("mobs.enderman.ignore-players-wearing-dragon-head", endermanIgnorePlayerDragonHead);
         endermanDisableStareAggro = getBoolean("mobs.enderman.disable-player-stare-aggression", endermanDisableStareAggro);
         endermanIgnoreProjectiles = getBoolean("mobs.enderman.ignore-projectiles", endermanIgnoreProjectiles);
+        endermanAlwaysDropExp = getBoolean("mobs.enderman.always-drop-exp", endermanAlwaysDropExp);
     }
 
     public boolean endermiteRidable = false;
@@ -1443,6 +1473,7 @@ public class PurpurWorldConfig {
     public boolean endermiteControllable = true;
     public double endermiteMaxHealth = 8.0D;
     public boolean endermiteTakeDamageFromWater = false;
+    public boolean endermiteAlwaysDropExp = false;
     private void endermiteSettings() {
         endermiteRidable = getBoolean("mobs.endermite.ridable", endermiteRidable);
         endermiteRidableInWater = getBoolean("mobs.endermite.ridable-in-water", endermiteRidableInWater);
@@ -1454,6 +1485,7 @@ public class PurpurWorldConfig {
         }
         endermiteMaxHealth = getDouble("mobs.endermite.attributes.max_health", endermiteMaxHealth);
         endermiteTakeDamageFromWater = getBoolean("mobs.endermite.takes-damage-from-water", endermiteTakeDamageFromWater);
+        endermiteAlwaysDropExp = getBoolean("mobs.endermite.always-drop-exp", endermiteAlwaysDropExp);
     }
 
     public boolean evokerRidable = false;
@@ -1462,6 +1494,7 @@ public class PurpurWorldConfig {
     public double evokerMaxHealth = 24.0D;
     public boolean evokerBypassMobGriefing = false;
     public boolean evokerTakeDamageFromWater = false;
+    public boolean evokerAlwaysDropExp = false;
     private void evokerSettings() {
         evokerRidable = getBoolean("mobs.evoker.ridable", evokerRidable);
         evokerRidableInWater = getBoolean("mobs.evoker.ridable-in-water", evokerRidableInWater);
@@ -1474,6 +1507,7 @@ public class PurpurWorldConfig {
         evokerMaxHealth = getDouble("mobs.evoker.attributes.max_health", evokerMaxHealth);
         evokerBypassMobGriefing = getBoolean("mobs.evoker.bypass-mob-griefing", evokerBypassMobGriefing);
         evokerTakeDamageFromWater = getBoolean("mobs.evoker.takes-damage-from-water", evokerTakeDamageFromWater);
+        evokerAlwaysDropExp = getBoolean("mobs.evoker.always-drop-exp", evokerAlwaysDropExp);
     }
 
     public boolean foxRidable = false;
@@ -1484,6 +1518,7 @@ public class PurpurWorldConfig {
     public int foxBreedingTicks = 6000;
     public boolean foxBypassMobGriefing = false;
     public boolean foxTakeDamageFromWater = false;
+    public boolean foxAlwaysDropExp = false;
     private void foxSettings() {
         foxRidable = getBoolean("mobs.fox.ridable", foxRidable);
         foxRidableInWater = getBoolean("mobs.fox.ridable-in-water", foxRidableInWater);
@@ -1498,6 +1533,7 @@ public class PurpurWorldConfig {
         foxBreedingTicks = getInt("mobs.fox.breeding-delay-ticks", foxBreedingTicks);
         foxBypassMobGriefing = getBoolean("mobs.fox.bypass-mob-griefing", foxBypassMobGriefing);
         foxTakeDamageFromWater = getBoolean("mobs.fox.takes-damage-from-water", foxTakeDamageFromWater);
+        foxAlwaysDropExp = getBoolean("mobs.fox.always-drop-exp", foxAlwaysDropExp);
     }
 
     public boolean frogRidable = false;
@@ -1519,6 +1555,7 @@ public class PurpurWorldConfig {
     public double ghastMaxY = 320D;
     public double ghastMaxHealth = 10.0D;
     public boolean ghastTakeDamageFromWater = false;
+    public boolean ghastAlwaysDropExp = false;
     private void ghastSettings() {
         ghastRidable = getBoolean("mobs.ghast.ridable", ghastRidable);
         ghastRidableInWater = getBoolean("mobs.ghast.ridable-in-water", ghastRidableInWater);
@@ -1531,6 +1568,7 @@ public class PurpurWorldConfig {
         }
         ghastMaxHealth = getDouble("mobs.ghast.attributes.max_health", ghastMaxHealth);
         ghastTakeDamageFromWater = getBoolean("mobs.ghast.takes-damage-from-water", ghastTakeDamageFromWater);
+        ghastAlwaysDropExp = getBoolean("mobs.ghast.always-drop-exp", ghastAlwaysDropExp);
     }
 
     public boolean giantRidable = false;
@@ -1544,6 +1582,7 @@ public class PurpurWorldConfig {
     public boolean giantHaveAI = false;
     public boolean giantHaveHostileAI = false;
     public boolean giantTakeDamageFromWater = false;
+    public boolean giantAlwaysDropExp = false;
     private void giantSettings() {
         giantRidable = getBoolean("mobs.giant.ridable", giantRidable);
         giantRidableInWater = getBoolean("mobs.giant.ridable-in-water", giantRidableInWater);
@@ -1565,6 +1604,7 @@ public class PurpurWorldConfig {
         giantHaveAI = getBoolean("mobs.giant.have-ai", giantHaveAI);
         giantHaveHostileAI = getBoolean("mobs.giant.have-hostile-ai", giantHaveHostileAI);
         giantTakeDamageFromWater = getBoolean("mobs.giant.takes-damage-from-water", giantTakeDamageFromWater);
+        giantAlwaysDropExp = getBoolean("mobs.giant.always-drop-exp", giantAlwaysDropExp);
     }
 
     public boolean glowSquidRidable = false;
@@ -1572,12 +1612,14 @@ public class PurpurWorldConfig {
     public double glowSquidMaxHealth = 10.0D;
     public boolean glowSquidsCanFly = false;
     public boolean glowSquidTakeDamageFromWater = false;
+    public boolean glowSquidAlwaysDropExp = false;
     private void glowSquidSettings() {
         glowSquidRidable = getBoolean("mobs.glow_squid.ridable", glowSquidRidable);
         glowSquidControllable = getBoolean("mobs.glow_squid.controllable", glowSquidControllable);
         glowSquidMaxHealth = getDouble("mobs.glow_squid.attributes.max_health", glowSquidMaxHealth);
         glowSquidsCanFly = getBoolean("mobs.glow_squid.can-fly", glowSquidsCanFly);
         glowSquidTakeDamageFromWater = getBoolean("mobs.glow_squid.takes-damage-from-water", glowSquidTakeDamageFromWater);
+        glowSquidAlwaysDropExp = getBoolean("mobs.glow_squid.always-drop-exp", glowSquidAlwaysDropExp);
     }
 
     public boolean goatRidable = false;
@@ -1586,6 +1628,7 @@ public class PurpurWorldConfig {
     public double goatMaxHealth = 10.0D;
     public int goatBreedingTicks = 6000;
     public boolean goatTakeDamageFromWater = false;
+    public boolean goatAlwaysDropExp = false;
     private void goatSettings() {
         goatRidable = getBoolean("mobs.goat.ridable", goatRidable);
         goatRidableInWater = getBoolean("mobs.goat.ridable-in-water", goatRidableInWater);
@@ -1593,12 +1636,14 @@ public class PurpurWorldConfig {
         goatMaxHealth = getDouble("mobs.goat.attributes.max_health", goatMaxHealth);
         goatBreedingTicks = getInt("mobs.goat.breeding-delay-ticks", goatBreedingTicks);
         goatTakeDamageFromWater = getBoolean("mobs.goat.takes-damage-from-water", goatTakeDamageFromWater);
+        goatAlwaysDropExp = getBoolean("mobs.goat.always-drop-exp", goatAlwaysDropExp);
     }
 
     public boolean guardianRidable = false;
     public boolean guardianControllable = true;
     public double guardianMaxHealth = 30.0D;
     public boolean guardianTakeDamageFromWater = false;
+    public boolean guardianAlwaysDropExp = false;
     private void guardianSettings() {
         guardianRidable = getBoolean("mobs.guardian.ridable", guardianRidable);
         guardianControllable = getBoolean("mobs.guardian.controllable", guardianControllable);
@@ -1609,6 +1654,7 @@ public class PurpurWorldConfig {
         }
         guardianMaxHealth = getDouble("mobs.guardian.attributes.max_health", guardianMaxHealth);
         guardianTakeDamageFromWater = getBoolean("mobs.guardian.takes-damage-from-water", guardianTakeDamageFromWater);
+        guardianAlwaysDropExp = getBoolean("mobs.guardian.always-drop-exp", guardianAlwaysDropExp);
     }
 
     public boolean forceHalloweenSeason = false;
@@ -1624,6 +1670,7 @@ public class PurpurWorldConfig {
     public double hoglinMaxHealth = 40.0D;
     public int hoglinBreedingTicks = 6000;
     public boolean hoglinTakeDamageFromWater = false;
+    public boolean hoglinAlwaysDropExp = false;
     private void hoglinSettings() {
         hoglinRidable = getBoolean("mobs.hoglin.ridable", hoglinRidable);
         hoglinRidableInWater = getBoolean("mobs.hoglin.ridable-in-water", hoglinRidableInWater);
@@ -1636,6 +1683,7 @@ public class PurpurWorldConfig {
         hoglinMaxHealth = getDouble("mobs.hoglin.attributes.max_health", hoglinMaxHealth);
         hoglinBreedingTicks = getInt("mobs.hoglin.breeding-delay-ticks", hoglinBreedingTicks);
         hoglinTakeDamageFromWater = getBoolean("mobs.hoglin.takes-damage-from-water", hoglinTakeDamageFromWater);
+        hoglinAlwaysDropExp = getBoolean("mobs.hoglin.always-drop-exp", hoglinAlwaysDropExp);
     }
 
     public boolean horseRidableInWater = false;
@@ -1647,6 +1695,7 @@ public class PurpurWorldConfig {
     public double horseMovementSpeedMax = 0.3375D;
     public int horseBreedingTicks = 6000;
     public boolean horseTakeDamageFromWater = false;
+    public boolean horseAlwaysDropExp = false;
     private void horseSettings() {
         horseRidableInWater = getBoolean("mobs.horse.ridable-in-water", horseRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1664,6 +1713,7 @@ public class PurpurWorldConfig {
         horseMovementSpeedMax = getDouble("mobs.horse.attributes.movement_speed.max", horseMovementSpeedMax);
         horseBreedingTicks = getInt("mobs.horse.breeding-delay-ticks", horseBreedingTicks);
         horseTakeDamageFromWater = getBoolean("mobs.horse.takes-damage-from-water", horseTakeDamageFromWater);
+        horseAlwaysDropExp = getBoolean("mobs.horse.always-drop-exp", horseAlwaysDropExp);
     }
 
     public boolean huskRidable = false;
@@ -1675,6 +1725,7 @@ public class PurpurWorldConfig {
     public double huskJockeyChance = 0.05D;
     public boolean huskJockeyTryExistingChickens = true;
     public boolean huskTakeDamageFromWater = false;
+    public boolean huskAlwaysDropExp = false;
     private void huskSettings() {
         huskRidable = getBoolean("mobs.husk.ridable", huskRidable);
         huskRidableInWater = getBoolean("mobs.husk.ridable-in-water", huskRidableInWater);
@@ -1690,6 +1741,7 @@ public class PurpurWorldConfig {
         huskJockeyChance = getDouble("mobs.husk.jockey.chance", huskJockeyChance);
         huskJockeyTryExistingChickens = getBoolean("mobs.husk.jockey.try-existing-chickens", huskJockeyTryExistingChickens);
         huskTakeDamageFromWater = getBoolean("mobs.husk.takes-damage-from-water", huskTakeDamageFromWater);
+        huskAlwaysDropExp = getBoolean("mobs.husk.always-drop-exp", huskAlwaysDropExp);
     }
 
     public boolean illusionerRidable = false;
@@ -1699,6 +1751,7 @@ public class PurpurWorldConfig {
     public double illusionerFollowRange = 18.0D;
     public double illusionerMaxHealth = 32.0D;
     public boolean illusionerTakeDamageFromWater = false;
+    public boolean illusionerAlwaysDropExp = false;
     private void illusionerSettings() {
         illusionerRidable = getBoolean("mobs.illusioner.ridable", illusionerRidable);
         illusionerRidableInWater = getBoolean("mobs.illusioner.ridable-in-water", illusionerRidableInWater);
@@ -1716,6 +1769,7 @@ public class PurpurWorldConfig {
         }
         illusionerMaxHealth = getDouble("mobs.illusioner.attributes.max_health", illusionerMaxHealth);
         illusionerTakeDamageFromWater = getBoolean("mobs.illusioner.takes-damage-from-water", illusionerTakeDamageFromWater);
+        illusionerAlwaysDropExp = getBoolean("mobs.illusioner.always-drop-exp", illusionerAlwaysDropExp);
     }
 
     public boolean ironGolemRidable = false;
@@ -1726,6 +1780,7 @@ public class PurpurWorldConfig {
     public boolean ironGolemTakeDamageFromWater = false;
     public boolean ironGolemPoppyCalm = false;
     public boolean ironGolemHealCalm = false;
+    public boolean ironGolemAlwaysDropExp = false;
     private void ironGolemSettings() {
         ironGolemRidable = getBoolean("mobs.iron_golem.ridable", ironGolemRidable);
         ironGolemRidableInWater = getBoolean("mobs.iron_golem.ridable-in-water", ironGolemRidableInWater);
@@ -1740,6 +1795,7 @@ public class PurpurWorldConfig {
         ironGolemTakeDamageFromWater = getBoolean("mobs.iron_golem.takes-damage-from-water", ironGolemTakeDamageFromWater);
         ironGolemPoppyCalm = getBoolean("mobs.iron_golem.poppy-calms-anger", ironGolemPoppyCalm);
         ironGolemHealCalm = getBoolean("mobs.iron_golem.healing-calms-anger", ironGolemHealCalm);
+        ironGolemAlwaysDropExp = getBoolean("mobs.iron_golem.always-drop-exp", ironGolemAlwaysDropExp);
     }
 
     public boolean llamaRidable = false;
@@ -1754,6 +1810,7 @@ public class PurpurWorldConfig {
     public int llamaBreedingTicks = 6000;
     public boolean llamaTakeDamageFromWater = false;
     public boolean llamaJoinCaravans = true;
+    public boolean llamaAlwaysDropExp = false;
     private void llamaSettings() {
         llamaRidable = getBoolean("mobs.llama.ridable", llamaRidable);
         llamaRidableInWater = getBoolean("mobs.llama.ridable-in-water", llamaRidableInWater);
@@ -1774,6 +1831,7 @@ public class PurpurWorldConfig {
         llamaBreedingTicks = getInt("mobs.llama.breeding-delay-ticks", llamaBreedingTicks);
         llamaTakeDamageFromWater = getBoolean("mobs.llama.takes-damage-from-water", llamaTakeDamageFromWater);
         llamaJoinCaravans = getBoolean("mobs.llama.join-caravans", llamaJoinCaravans);
+        llamaAlwaysDropExp = getBoolean("mobs.llama.always-drop-exp", llamaAlwaysDropExp);
     }
 
     public boolean magmaCubeRidable = false;
@@ -1784,6 +1842,7 @@ public class PurpurWorldConfig {
     public Map<Integer, Double> magmaCubeMaxHealthCache = new HashMap<>();
     public Map<Integer, Double> magmaCubeAttackDamageCache = new HashMap<>();
     public boolean magmaCubeTakeDamageFromWater = false;
+    public boolean magmaCubeAlwaysDropExp = false;
     private void magmaCubeSettings() {
         magmaCubeRidable = getBoolean("mobs.magma_cube.ridable", magmaCubeRidable);
         magmaCubeRidableInWater = getBoolean("mobs.magma_cube.ridable-in-water", magmaCubeRidableInWater);
@@ -1798,6 +1857,7 @@ public class PurpurWorldConfig {
         magmaCubeMaxHealthCache.clear();
         magmaCubeAttackDamageCache.clear();
         magmaCubeTakeDamageFromWater = getBoolean("mobs.magma_cube.takes-damage-from-water", magmaCubeTakeDamageFromWater);
+        magmaCubeAlwaysDropExp = getBoolean("mobs.magma_cube.always-drop-exp", magmaCubeAlwaysDropExp);
     }
 
     public boolean mooshroomRidable = false;
@@ -1806,6 +1866,7 @@ public class PurpurWorldConfig {
     public double mooshroomMaxHealth = 10.0D;
     public int mooshroomBreedingTicks = 6000;
     public boolean mooshroomTakeDamageFromWater = false;
+    public boolean mooshroomAlwaysDropExp = false;
     private void mooshroomSettings() {
         mooshroomRidable = getBoolean("mobs.mooshroom.ridable", mooshroomRidable);
         mooshroomRidableInWater = getBoolean("mobs.mooshroom.ridable-in-water", mooshroomRidableInWater);
@@ -1818,6 +1879,7 @@ public class PurpurWorldConfig {
         mooshroomMaxHealth = getDouble("mobs.mooshroom.attributes.max_health", mooshroomMaxHealth);
         mooshroomBreedingTicks = getInt("mobs.mooshroom.breeding-delay-ticks", mooshroomBreedingTicks);
         mooshroomTakeDamageFromWater = getBoolean("mobs.mooshroom.takes-damage-from-water", mooshroomTakeDamageFromWater);
+        mooshroomAlwaysDropExp = getBoolean("mobs.mooshroom.always-drop-exp", mooshroomAlwaysDropExp);
     }
 
     public boolean muleRidableInWater = false;
@@ -1829,6 +1891,7 @@ public class PurpurWorldConfig {
     public double muleMovementSpeedMax = 0.175D;
     public int muleBreedingTicks = 6000;
     public boolean muleTakeDamageFromWater = false;
+    public boolean muleAlwaysDropExp = false;
     private void muleSettings() {
         muleRidableInWater = getBoolean("mobs.mule.ridable-in-water", muleRidableInWater);
         if (PurpurConfig.version < 10) {
@@ -1846,6 +1909,7 @@ public class PurpurWorldConfig {
         muleMovementSpeedMax = getDouble("mobs.mule.attributes.movement_speed.max", muleMovementSpeedMax);
         muleBreedingTicks = getInt("mobs.mule.breeding-delay-ticks", muleBreedingTicks);
         muleTakeDamageFromWater = getBoolean("mobs.mule.takes-damage-from-water", muleTakeDamageFromWater);
+        muleAlwaysDropExp = getBoolean("mobs.mule.always-drop-exp", muleAlwaysDropExp);
     }
 
     public boolean ocelotRidable = false;
@@ -1854,6 +1918,7 @@ public class PurpurWorldConfig {
     public double ocelotMaxHealth = 10.0D;
     public int ocelotBreedingTicks = 6000;
     public boolean ocelotTakeDamageFromWater = false;
+    public boolean ocelotAlwaysDropExp = false;
     private void ocelotSettings() {
         ocelotRidable = getBoolean("mobs.ocelot.ridable", ocelotRidable);
         ocelotRidableInWater = getBoolean("mobs.ocelot.ridable-in-water", ocelotRidableInWater);
@@ -1866,6 +1931,7 @@ public class PurpurWorldConfig {
         ocelotMaxHealth = getDouble("mobs.ocelot.attributes.max_health", ocelotMaxHealth);
         ocelotBreedingTicks = getInt("mobs.ocelot.breeding-delay-ticks", ocelotBreedingTicks);
         ocelotTakeDamageFromWater = getBoolean("mobs.ocelot.takes-damage-from-water", ocelotTakeDamageFromWater);
+        ocelotAlwaysDropExp = getBoolean("mobs.ocelot.always-drop-exp", ocelotAlwaysDropExp);
     }
 
     public boolean pandaRidable = false;
@@ -1874,6 +1940,7 @@ public class PurpurWorldConfig {
     public double pandaMaxHealth = 20.0D;
     public int pandaBreedingTicks = 6000;
     public boolean pandaTakeDamageFromWater = false;
+    public boolean pandaAlwaysDropExp = false;
     private void pandaSettings() {
         pandaRidable = getBoolean("mobs.panda.ridable", pandaRidable);
         pandaRidableInWater = getBoolean("mobs.panda.ridable-in-water", pandaRidableInWater);
@@ -1886,6 +1953,7 @@ public class PurpurWorldConfig {
         pandaMaxHealth = getDouble("mobs.panda.attributes.max_health", pandaMaxHealth);
         pandaBreedingTicks = getInt("mobs.panda.breeding-delay-ticks", pandaBreedingTicks);
         pandaTakeDamageFromWater = getBoolean("mobs.panda.takes-damage-from-water", pandaTakeDamageFromWater);
+        pandaAlwaysDropExp = getBoolean("mobs.panda.always-drop-exp", pandaAlwaysDropExp);
     }
 
     public boolean parrotRidable = false;
@@ -1895,6 +1963,7 @@ public class PurpurWorldConfig {
     public double parrotMaxHealth = 6.0D;
     public boolean parrotTakeDamageFromWater = false;
     public boolean parrotBreedable = false;
+    public boolean parrotAlwaysDropExp = false;
     private void parrotSettings() {
         parrotRidable = getBoolean("mobs.parrot.ridable", parrotRidable);
         parrotRidableInWater = getBoolean("mobs.parrot.ridable-in-water", parrotRidableInWater);
@@ -1908,6 +1977,7 @@ public class PurpurWorldConfig {
         parrotMaxHealth = getDouble("mobs.parrot.attributes.max_health", parrotMaxHealth);
         parrotTakeDamageFromWater = getBoolean("mobs.parrot.takes-damage-from-water", parrotTakeDamageFromWater);
         parrotBreedable = getBoolean("mobs.parrot.can-breed", parrotBreedable);
+        parrotAlwaysDropExp = getBoolean("mobs.parrot.always-drop-exp", parrotAlwaysDropExp);
     }
 
     public boolean phantomRidable = false;
@@ -1935,6 +2005,7 @@ public class PurpurWorldConfig {
     public boolean phantomBurnInDaylight = true;
     public boolean phantomFlamesOnSwoop = false;
     public boolean phantomTakeDamageFromWater = false;
+    public boolean phantomAlwaysDropExp = false;
     private void phantomSettings() {
         phantomRidable = getBoolean("mobs.phantom.ridable", phantomRidable);
         phantomRidableInWater = getBoolean("mobs.phantom.ridable-in-water", phantomRidableInWater);
@@ -1970,6 +2041,7 @@ public class PurpurWorldConfig {
         phantomIgnorePlayersWithTorch = getBoolean("mobs.phantom.ignore-players-with-torch", phantomIgnorePlayersWithTorch);
         phantomFlamesOnSwoop = getBoolean("mobs.phantom.flames-on-swoop", phantomFlamesOnSwoop);
         phantomTakeDamageFromWater = getBoolean("mobs.phantom.takes-damage-from-water", phantomTakeDamageFromWater);
+        phantomAlwaysDropExp = getBoolean("mobs.phantom.always-drop-exp", phantomAlwaysDropExp);
     }
 
     public boolean pigRidable = false;
@@ -1979,6 +2051,7 @@ public class PurpurWorldConfig {
     public boolean pigGiveSaddleBack = false;
     public int pigBreedingTicks = 6000;
     public boolean pigTakeDamageFromWater = false;
+    public boolean pigAlwaysDropExp = false;
     private void pigSettings() {
         pigRidable = getBoolean("mobs.pig.ridable", pigRidable);
         pigRidableInWater = getBoolean("mobs.pig.ridable-in-water", pigRidableInWater);
@@ -1992,6 +2065,7 @@ public class PurpurWorldConfig {
         pigGiveSaddleBack = getBoolean("mobs.pig.give-saddle-back", pigGiveSaddleBack);
         pigBreedingTicks = getInt("mobs.pig.breeding-delay-ticks", pigBreedingTicks);
         pigTakeDamageFromWater = getBoolean("mobs.pig.takes-damage-from-water", pigTakeDamageFromWater);
+        pigAlwaysDropExp = getBoolean("mobs.pig.always-drop-exp", pigAlwaysDropExp);
     }
 
     public boolean piglinRidable = false;
@@ -2001,6 +2075,7 @@ public class PurpurWorldConfig {
     public boolean piglinBypassMobGriefing = false;
     public boolean piglinTakeDamageFromWater = false;
     public int piglinPortalSpawnModifier = 2000;
+    public boolean piglinAlwaysDropExp = false;
     private void piglinSettings() {
         piglinRidable = getBoolean("mobs.piglin.ridable", piglinRidable);
         piglinRidableInWater = getBoolean("mobs.piglin.ridable-in-water", piglinRidableInWater);
@@ -2014,6 +2089,7 @@ public class PurpurWorldConfig {
         piglinBypassMobGriefing = getBoolean("mobs.piglin.bypass-mob-griefing", piglinBypassMobGriefing);
         piglinTakeDamageFromWater = getBoolean("mobs.piglin.takes-damage-from-water", piglinTakeDamageFromWater);
         piglinPortalSpawnModifier = getInt("mobs.piglin.portal-spawn-modifier", piglinPortalSpawnModifier);
+        piglinAlwaysDropExp = getBoolean("mobs.piglin.always-drop-exp", piglinAlwaysDropExp);
     }
 
     public boolean piglinBruteRidable = false;
@@ -2021,6 +2097,7 @@ public class PurpurWorldConfig {
     public boolean piglinBruteControllable = true;
     public double piglinBruteMaxHealth = 50.0D;
     public boolean piglinBruteTakeDamageFromWater = false;
+    public boolean piglinBruteAlwaysDropExp = false;
     private void piglinBruteSettings() {
         piglinBruteRidable = getBoolean("mobs.piglin_brute.ridable", piglinBruteRidable);
         piglinBruteRidableInWater = getBoolean("mobs.piglin_brute.ridable-in-water", piglinBruteRidableInWater);
@@ -2032,6 +2109,7 @@ public class PurpurWorldConfig {
         }
         piglinBruteMaxHealth = getDouble("mobs.piglin_brute.attributes.max_health", piglinBruteMaxHealth);
         piglinBruteTakeDamageFromWater = getBoolean("mobs.piglin_brute.takes-damage-from-water", piglinBruteTakeDamageFromWater);
+        piglinBruteAlwaysDropExp = getBoolean("mobs.piglin_brute.always-drop-exp", piglinBruteAlwaysDropExp);
     }
 
     public boolean pillagerRidable = false;
@@ -2040,6 +2118,7 @@ public class PurpurWorldConfig {
     public double pillagerMaxHealth = 24.0D;
     public boolean pillagerBypassMobGriefing = false;
     public boolean pillagerTakeDamageFromWater = false;
+    public boolean pillagerAlwaysDropExp = false;
     private void pillagerSettings() {
         pillagerRidable = getBoolean("mobs.pillager.ridable", pillagerRidable);
         pillagerRidableInWater = getBoolean("mobs.pillager.ridable-in-water", pillagerRidableInWater);
@@ -2052,6 +2131,7 @@ public class PurpurWorldConfig {
         pillagerMaxHealth = getDouble("mobs.pillager.attributes.max_health", pillagerMaxHealth);
         pillagerBypassMobGriefing = getBoolean("mobs.pillager.bypass-mob-griefing", pillagerBypassMobGriefing);
         pillagerTakeDamageFromWater = getBoolean("mobs.pillager.takes-damage-from-water", pillagerTakeDamageFromWater);
+        pillagerAlwaysDropExp = getBoolean("mobs.pillager.always-drop-exp", pillagerAlwaysDropExp);
     }
 
     public boolean polarBearRidable = false;
@@ -2062,6 +2142,7 @@ public class PurpurWorldConfig {
     public Item polarBearBreedableItem = null;
     public int polarBearBreedingTicks = 6000;
     public boolean polarBearTakeDamageFromWater = false;
+    public boolean polarBearAlwaysDropExp = false;
     private void polarBearSettings() {
         polarBearRidable = getBoolean("mobs.polar_bear.ridable", polarBearRidable);
         polarBearRidableInWater = getBoolean("mobs.polar_bear.ridable-in-water", polarBearRidableInWater);
@@ -2077,12 +2158,14 @@ public class PurpurWorldConfig {
         if (item != Items.AIR) polarBearBreedableItem = item;
         polarBearBreedingTicks = getInt("mobs.polar_bear.breeding-delay-ticks", polarBearBreedingTicks);
         polarBearTakeDamageFromWater = getBoolean("mobs.polar_bear.takes-damage-from-water", polarBearTakeDamageFromWater);
+        polarBearAlwaysDropExp = getBoolean("mobs.polar_bear.always-drop-exp", polarBearAlwaysDropExp);
     }
 
     public boolean pufferfishRidable = false;
     public boolean pufferfishControllable = true;
     public double pufferfishMaxHealth = 3.0D;
     public boolean pufferfishTakeDamageFromWater = false;
+    public boolean pufferfishAlwaysDropExp = false;
     private void pufferfishSettings() {
         pufferfishRidable = getBoolean("mobs.pufferfish.ridable", pufferfishRidable);
         pufferfishControllable = getBoolean("mobs.pufferfish.controllable", pufferfishControllable);
@@ -2093,6 +2176,7 @@ public class PurpurWorldConfig {
         }
         pufferfishMaxHealth = getDouble("mobs.pufferfish.attributes.max_health", pufferfishMaxHealth);
         pufferfishTakeDamageFromWater = getBoolean("mobs.pufferfish.takes-damage-from-water", pufferfishTakeDamageFromWater);
+        pufferfishAlwaysDropExp = getBoolean("mobs.pufferfish.always-drop-exp", pufferfishAlwaysDropExp);
     }
 
     public boolean rabbitRidable = false;
@@ -2104,6 +2188,7 @@ public class PurpurWorldConfig {
     public int rabbitBreedingTicks = 6000;
     public boolean rabbitBypassMobGriefing = false;
     public boolean rabbitTakeDamageFromWater = false;
+    public boolean rabbitAlwaysDropExp = false;
     private void rabbitSettings() {
         rabbitRidable = getBoolean("mobs.rabbit.ridable", rabbitRidable);
         rabbitRidableInWater = getBoolean("mobs.rabbit.ridable-in-water", rabbitRidableInWater);
@@ -2119,6 +2204,7 @@ public class PurpurWorldConfig {
         rabbitBreedingTicks = getInt("mobs.rabbit.breeding-delay-ticks", rabbitBreedingTicks);
         rabbitBypassMobGriefing = getBoolean("mobs.rabbit.bypass-mob-griefing", rabbitBypassMobGriefing);
         rabbitTakeDamageFromWater = getBoolean("mobs.rabbit.takes-damage-from-water", rabbitTakeDamageFromWater);
+        rabbitAlwaysDropExp = getBoolean("mobs.rabbit.always-drop-exp", rabbitAlwaysDropExp);
     }
 
     public boolean ravagerRidable = false;
@@ -2128,6 +2214,7 @@ public class PurpurWorldConfig {
     public boolean ravagerBypassMobGriefing = false;
     public boolean ravagerTakeDamageFromWater = false;
     public List<Block> ravagerGriefableBlocks = new ArrayList<>();
+    public boolean ravagerAlwaysDropExp = false;
     private void ravagerSettings() {
         ravagerRidable = getBoolean("mobs.ravager.ridable", ravagerRidable);
         ravagerRidableInWater = getBoolean("mobs.ravager.ridable-in-water", ravagerRidableInWater);
@@ -2157,12 +2244,14 @@ public class PurpurWorldConfig {
                 ravagerGriefableBlocks.add(block);
             }
         });
+        ravagerAlwaysDropExp = getBoolean("mobs.ravager.always-drop-exp", ravagerAlwaysDropExp);
     }
 
     public boolean salmonRidable = false;
     public boolean salmonControllable = true;
     public double salmonMaxHealth = 3.0D;
     public boolean salmonTakeDamageFromWater = false;
+    public boolean salmonAlwaysDropExp = false;
     private void salmonSettings() {
         salmonRidable = getBoolean("mobs.salmon.ridable", salmonRidable);
         salmonControllable = getBoolean("mobs.salmon.controllable", salmonControllable);
@@ -2173,6 +2262,7 @@ public class PurpurWorldConfig {
         }
         salmonMaxHealth = getDouble("mobs.salmon.attributes.max_health", salmonMaxHealth);
         salmonTakeDamageFromWater = getBoolean("mobs.salmon.takes-damage-from-water", salmonTakeDamageFromWater);
+        salmonAlwaysDropExp = getBoolean("mobs.salmon.always-drop-exp", salmonAlwaysDropExp);
     }
 
     public boolean sheepRidable = false;
@@ -2182,6 +2272,7 @@ public class PurpurWorldConfig {
     public int sheepBreedingTicks = 6000;
     public boolean sheepBypassMobGriefing = false;
     public boolean sheepTakeDamageFromWater = false;
+    public boolean sheepAlwaysDropExp = false;
     private void sheepSettings() {
         sheepRidable = getBoolean("mobs.sheep.ridable", sheepRidable);
         sheepRidableInWater = getBoolean("mobs.sheep.ridable-in-water", sheepRidableInWater);
@@ -2195,6 +2286,7 @@ public class PurpurWorldConfig {
         sheepBreedingTicks = getInt("mobs.sheep.breeding-delay-ticks", sheepBreedingTicks);
         sheepBypassMobGriefing = getBoolean("mobs.sheep.bypass-mob-griefing", sheepBypassMobGriefing);
         sheepTakeDamageFromWater = getBoolean("mobs.sheep.takes-damage-from-water", sheepTakeDamageFromWater);
+        sheepAlwaysDropExp = getBoolean("mobs.sheep.always-drop-exp", sheepAlwaysDropExp);
     }
 
     public boolean shulkerRidable = false;
@@ -2208,6 +2300,7 @@ public class PurpurWorldConfig {
     public String shulkerSpawnFromBulletNearbyEquation = "(nearby - 1) / 5.0";
     public boolean shulkerSpawnFromBulletRandomColor = false;
     public boolean shulkerChangeColorWithDye = false;
+    public boolean shulkerAlwaysDropExp = false;
     private void shulkerSettings() {
         shulkerRidable = getBoolean("mobs.shulker.ridable", shulkerRidable);
         shulkerRidableInWater = getBoolean("mobs.shulker.ridable-in-water", shulkerRidableInWater);
@@ -2225,6 +2318,7 @@ public class PurpurWorldConfig {
         shulkerSpawnFromBulletNearbyEquation = getString("mobs.shulker.spawn-from-bullet.nearby-equation", shulkerSpawnFromBulletNearbyEquation);
         shulkerSpawnFromBulletRandomColor = getBoolean("mobs.shulker.spawn-from-bullet.random-color", shulkerSpawnFromBulletRandomColor);
         shulkerChangeColorWithDye = getBoolean("mobs.shulker.change-color-with-dye", shulkerChangeColorWithDye);
+        shulkerAlwaysDropExp = getBoolean("mobs.shulker.always-drop-exp", shulkerAlwaysDropExp);
     }
 
     public boolean silverfishRidable = false;
@@ -2233,6 +2327,7 @@ public class PurpurWorldConfig {
     public double silverfishMaxHealth = 8.0D;
     public boolean silverfishBypassMobGriefing = false;
     public boolean silverfishTakeDamageFromWater = false;
+    public boolean silverfishAlwaysDropExp = false;
     private void silverfishSettings() {
         silverfishRidable = getBoolean("mobs.silverfish.ridable", silverfishRidable);
         silverfishRidableInWater = getBoolean("mobs.silverfish.ridable-in-water", silverfishRidableInWater);
@@ -2245,6 +2340,7 @@ public class PurpurWorldConfig {
         silverfishMaxHealth = getDouble("mobs.silverfish.attributes.max_health", silverfishMaxHealth);
         silverfishBypassMobGriefing = getBoolean("mobs.silverfish.bypass-mob-griefing", silverfishBypassMobGriefing);
         silverfishTakeDamageFromWater = getBoolean("mobs.silverfish.takes-damage-from-water", silverfishTakeDamageFromWater);
+        silverfishAlwaysDropExp = getBoolean("mobs.silverfish.always-drop-exp", silverfishAlwaysDropExp);
     }
 
     public boolean skeletonRidable = false;
@@ -2252,6 +2348,7 @@ public class PurpurWorldConfig {
     public boolean skeletonControllable = true;
     public double skeletonMaxHealth = 20.0D;
     public boolean skeletonTakeDamageFromWater = false;
+    public boolean skeletonAlwaysDropExp = false;
     private void skeletonSettings() {
         skeletonRidable = getBoolean("mobs.skeleton.ridable", skeletonRidable);
         skeletonRidableInWater = getBoolean("mobs.skeleton.ridable-in-water", skeletonRidableInWater);
@@ -2263,6 +2360,7 @@ public class PurpurWorldConfig {
         }
         skeletonMaxHealth = getDouble("mobs.skeleton.attributes.max_health", skeletonMaxHealth);
         skeletonTakeDamageFromWater = getBoolean("mobs.skeleton.takes-damage-from-water", skeletonTakeDamageFromWater);
+        skeletonAlwaysDropExp = getBoolean("mobs.skeleton.always-drop-exp", skeletonAlwaysDropExp);
     }
 
     public boolean skeletonHorseRidableInWater = true;
@@ -2274,6 +2372,7 @@ public class PurpurWorldConfig {
     public double skeletonHorseMovementSpeedMin = 0.2D;
     public double skeletonHorseMovementSpeedMax = 0.2D;
     public boolean skeletonHorseTakeDamageFromWater = false;
+    public boolean skeletonHorseAlwaysDropExp = false;
     private void skeletonHorseSettings() {
         skeletonHorseRidableInWater = getBoolean("mobs.skeleton_horse.ridable-in-water", skeletonHorseRidableInWater);
         skeletonHorseCanSwim = getBoolean("mobs.skeleton_horse.can-swim", skeletonHorseCanSwim);
@@ -2290,6 +2389,7 @@ public class PurpurWorldConfig {
         skeletonHorseMovementSpeedMin = getDouble("mobs.skeleton_horse.attributes.movement_speed.min", skeletonHorseMovementSpeedMin);
         skeletonHorseMovementSpeedMax = getDouble("mobs.skeleton_horse.attributes.movement_speed.max", skeletonHorseMovementSpeedMax);
         skeletonHorseTakeDamageFromWater = getBoolean("mobs.skeleton_horse.takes-damage-from-water", skeletonHorseTakeDamageFromWater);
+        skeletonHorseAlwaysDropExp = getBoolean("mobs.skeleton_horse.always-drop-exp", skeletonHorseAlwaysDropExp);
     }
 
     public boolean slimeRidable = false;
@@ -2300,6 +2400,7 @@ public class PurpurWorldConfig {
     public Map<Integer, Double> slimeMaxHealthCache = new HashMap<>();
     public Map<Integer, Double> slimeAttackDamageCache = new HashMap<>();
     public boolean slimeTakeDamageFromWater = false;
+    public boolean slimeAlwaysDropExp = false;
     private void slimeSettings() {
         slimeRidable = getBoolean("mobs.slime.ridable", slimeRidable);
         slimeRidableInWater = getBoolean("mobs.slime.ridable-in-water", slimeRidableInWater);
@@ -2314,6 +2415,7 @@ public class PurpurWorldConfig {
         slimeMaxHealthCache.clear();
         slimeAttackDamageCache.clear();
         slimeTakeDamageFromWater = getBoolean("mobs.slime.takes-damage-from-water", slimeTakeDamageFromWater);
+        slimeAlwaysDropExp = getBoolean("mobs.slime.always-drop-exp", slimeAlwaysDropExp);
     }
 
     public boolean snowGolemRidable = false;
@@ -2329,6 +2431,7 @@ public class PurpurWorldConfig {
     public double snowGolemAttackDistance = 1.25D;
     public boolean snowGolemBypassMobGriefing = false;
     public boolean snowGolemTakeDamageFromWater = true;
+    public boolean snowGolemAlwaysDropExp = false;
     private void snowGolemSettings() {
         snowGolemRidable = getBoolean("mobs.snow_golem.ridable", snowGolemRidable);
         snowGolemRidableInWater = getBoolean("mobs.snow_golem.ridable-in-water", snowGolemRidableInWater);
@@ -2348,6 +2451,7 @@ public class PurpurWorldConfig {
         snowGolemAttackDistance = getDouble("mobs.snow_golem.attack-distance", snowGolemAttackDistance);
         snowGolemBypassMobGriefing = getBoolean("mobs.snow_golem.bypass-mob-griefing", snowGolemBypassMobGriefing);
         snowGolemTakeDamageFromWater = getBoolean("mobs.snow_golem.takes-damage-from-water", snowGolemTakeDamageFromWater);
+        snowGolemAlwaysDropExp = getBoolean("mobs.snow_golem.always-drop-exp", snowGolemAlwaysDropExp);
     }
 
     public boolean snifferRidable = false;
@@ -2370,6 +2474,7 @@ public class PurpurWorldConfig {
     public double squidOffsetWaterCheck = 0.0D;
     public boolean squidsCanFly = false;
     public boolean squidTakeDamageFromWater = false;
+    public boolean squidAlwaysDropExp = false;
     private void squidSettings() {
         squidRidable = getBoolean("mobs.squid.ridable", squidRidable);
         squidControllable = getBoolean("mobs.squid.controllable", squidControllable);
@@ -2383,6 +2488,7 @@ public class PurpurWorldConfig {
         squidOffsetWaterCheck = getDouble("mobs.squid.water-offset-check", squidOffsetWaterCheck);
         squidsCanFly = getBoolean("mobs.squid.can-fly", squidsCanFly);
         squidTakeDamageFromWater = getBoolean("mobs.squid.takes-damage-from-water", squidTakeDamageFromWater);
+        squidAlwaysDropExp = getBoolean("mobs.squid.always-drop-exp", squidAlwaysDropExp);
     }
 
     public boolean spiderRidable = false;
@@ -2390,6 +2496,7 @@ public class PurpurWorldConfig {
     public boolean spiderControllable = true;
     public double spiderMaxHealth = 16.0D;
     public boolean spiderTakeDamageFromWater = false;
+    public boolean spiderAlwaysDropExp = false;
     private void spiderSettings() {
         spiderRidable = getBoolean("mobs.spider.ridable", spiderRidable);
         spiderRidableInWater = getBoolean("mobs.spider.ridable-in-water", spiderRidableInWater);
@@ -2401,6 +2508,7 @@ public class PurpurWorldConfig {
         }
         spiderMaxHealth = getDouble("mobs.spider.attributes.max_health", spiderMaxHealth);
         spiderTakeDamageFromWater = getBoolean("mobs.spider.takes-damage-from-water", spiderTakeDamageFromWater);
+        spiderAlwaysDropExp = getBoolean("mobs.spider.always-drop-exp", spiderAlwaysDropExp);
     }
 
     public boolean strayRidable = false;
@@ -2408,6 +2516,7 @@ public class PurpurWorldConfig {
     public boolean strayControllable = true;
     public double strayMaxHealth = 20.0D;
     public boolean strayTakeDamageFromWater = false;
+    public boolean strayAlwaysDropExp = false;
     private void straySettings() {
         strayRidable = getBoolean("mobs.stray.ridable", strayRidable);
         strayRidableInWater = getBoolean("mobs.stray.ridable-in-water", strayRidableInWater);
@@ -2419,6 +2528,7 @@ public class PurpurWorldConfig {
         }
         strayMaxHealth = getDouble("mobs.stray.attributes.max_health", strayMaxHealth);
         strayTakeDamageFromWater = getBoolean("mobs.stray.takes-damage-from-water", strayTakeDamageFromWater);
+        strayAlwaysDropExp = getBoolean("mobs.stray.always-drop-exp", strayAlwaysDropExp);
     }
 
     public boolean striderRidable = false;
@@ -2428,6 +2538,7 @@ public class PurpurWorldConfig {
     public int striderBreedingTicks = 6000;
     public boolean striderGiveSaddleBack = false;
     public boolean striderTakeDamageFromWater = true;
+    public boolean striderAlwaysDropExp = false;
     private void striderSettings() {
         striderRidable = getBoolean("mobs.strider.ridable", striderRidable);
         striderRidableInWater = getBoolean("mobs.strider.ridable-in-water", striderRidableInWater);
@@ -2441,6 +2552,7 @@ public class PurpurWorldConfig {
         striderBreedingTicks = getInt("mobs.strider.breeding-delay-ticks", striderBreedingTicks);
         striderGiveSaddleBack = getBoolean("mobs.strider.give-saddle-back", striderGiveSaddleBack);
         striderTakeDamageFromWater = getBoolean("mobs.strider.takes-damage-from-water", striderTakeDamageFromWater);
+        striderAlwaysDropExp = getBoolean("mobs.strider.always-drop-exp", striderAlwaysDropExp);
     }
 
     public boolean tadpoleRidable = false;
@@ -2463,6 +2575,7 @@ public class PurpurWorldConfig {
     public double traderLlamaMovementSpeedMax = 0.175D;
     public int traderLlamaBreedingTicks = 6000;
     public boolean traderLlamaTakeDamageFromWater = false;
+    public boolean traderLlamaAlwaysDropExp = false;
     private void traderLlamaSettings() {
         traderLlamaRidable = getBoolean("mobs.trader_llama.ridable", traderLlamaRidable);
         traderLlamaRidableInWater = getBoolean("mobs.trader_llama.ridable-in-water", traderLlamaRidableInWater);
@@ -2482,12 +2595,14 @@ public class PurpurWorldConfig {
         traderLlamaMovementSpeedMax = getDouble("mobs.trader_llama.attributes.movement_speed.max", traderLlamaMovementSpeedMax);
         traderLlamaBreedingTicks = getInt("mobs.trader_llama.breeding-delay-ticks", traderLlamaBreedingTicks);
         traderLlamaTakeDamageFromWater = getBoolean("mobs.trader_llama.takes-damage-from-water", traderLlamaTakeDamageFromWater);
+        traderLlamaAlwaysDropExp = getBoolean("mobs.trader_llama.always-drop-exp", traderLlamaAlwaysDropExp);
     }
 
     public boolean tropicalFishRidable = false;
     public boolean tropicalFishControllable = true;
     public double tropicalFishMaxHealth = 3.0D;
     public boolean tropicalFishTakeDamageFromWater = false;
+    public boolean tropicalFishAlwaysDropExp = false;
     private void tropicalFishSettings() {
         tropicalFishRidable = getBoolean("mobs.tropical_fish.ridable", tropicalFishRidable);
         tropicalFishControllable = getBoolean("mobs.tropical_fish.controllable", tropicalFishControllable);
@@ -2498,6 +2613,7 @@ public class PurpurWorldConfig {
         }
         tropicalFishMaxHealth = getDouble("mobs.tropical_fish.attributes.max_health", tropicalFishMaxHealth);
         tropicalFishTakeDamageFromWater = getBoolean("mobs.tropical_fish.takes-damage-from-water", tropicalFishTakeDamageFromWater);
+        tropicalFishAlwaysDropExp = getBoolean("mobs.tropical_fish.always-drop-exp", tropicalFishAlwaysDropExp);
     }
 
     public boolean turtleRidable = false;
@@ -2506,6 +2622,7 @@ public class PurpurWorldConfig {
     public double turtleMaxHealth = 30.0D;
     public int turtleBreedingTicks = 6000;
     public boolean turtleTakeDamageFromWater = false;
+    public boolean turtleAlwaysDropExp = false;
     private void turtleSettings() {
         turtleRidable = getBoolean("mobs.turtle.ridable", turtleRidable);
         turtleRidableInWater = getBoolean("mobs.turtle.ridable-in-water", turtleRidableInWater);
@@ -2518,6 +2635,7 @@ public class PurpurWorldConfig {
         turtleMaxHealth = getDouble("mobs.turtle.attributes.max_health", turtleMaxHealth);
         turtleBreedingTicks = getInt("mobs.turtle.breeding-delay-ticks", turtleBreedingTicks);
         turtleTakeDamageFromWater = getBoolean("mobs.turtle.takes-damage-from-water", turtleTakeDamageFromWater);
+        turtleAlwaysDropExp = getBoolean("mobs.turtle.always-drop-exp", turtleAlwaysDropExp);
     }
 
     public boolean vexRidable = false;
@@ -2526,6 +2644,7 @@ public class PurpurWorldConfig {
     public double vexMaxY = 320D;
     public double vexMaxHealth = 14.0D;
     public boolean vexTakeDamageFromWater = false;
+    public boolean vexAlwaysDropExp = false;
     private void vexSettings() {
         vexRidable = getBoolean("mobs.vex.ridable", vexRidable);
         vexRidableInWater = getBoolean("mobs.vex.ridable-in-water", vexRidableInWater);
@@ -2538,6 +2657,7 @@ public class PurpurWorldConfig {
         }
         vexMaxHealth = getDouble("mobs.vex.attributes.max_health", vexMaxHealth);
         vexTakeDamageFromWater = getBoolean("mobs.vex.takes-damage-from-water", vexTakeDamageFromWater);
+        vexAlwaysDropExp = getBoolean("mobs.vex.always-drop-exp", vexAlwaysDropExp);
     }
 
     public boolean villagerRidable = false;
@@ -2553,6 +2673,7 @@ public class PurpurWorldConfig {
     public boolean villagerBypassMobGriefing = false;
     public boolean villagerTakeDamageFromWater = false;
     public boolean villagerAllowTrading = true;
+    public boolean villagerAlwaysDropExp = false;
     private void villagerSettings() {
         villagerRidable = getBoolean("mobs.villager.ridable", villagerRidable);
         villagerRidableInWater = getBoolean("mobs.villager.ridable-in-water", villagerRidableInWater);
@@ -2572,6 +2693,7 @@ public class PurpurWorldConfig {
         villagerBypassMobGriefing = getBoolean("mobs.villager.bypass-mob-griefing", villagerBypassMobGriefing);
         villagerTakeDamageFromWater = getBoolean("mobs.villager.takes-damage-from-water", villagerTakeDamageFromWater);
         villagerAllowTrading = getBoolean("mobs.villager.allow-trading", villagerAllowTrading);
+        villagerAlwaysDropExp = getBoolean("mobs.villager.always-drop-exp", villagerAlwaysDropExp);
     }
 
     public boolean vindicatorRidable = false;
@@ -2580,6 +2702,7 @@ public class PurpurWorldConfig {
     public double vindicatorMaxHealth = 24.0D;
     public double vindicatorJohnnySpawnChance = 0D;
     public boolean vindicatorTakeDamageFromWater = false;
+    public boolean vindicatorAlwaysDropExp = false;
     private void vindicatorSettings() {
         vindicatorRidable = getBoolean("mobs.vindicator.ridable", vindicatorRidable);
         vindicatorRidableInWater = getBoolean("mobs.vindicator.ridable-in-water", vindicatorRidableInWater);
@@ -2592,6 +2715,7 @@ public class PurpurWorldConfig {
         vindicatorMaxHealth = getDouble("mobs.vindicator.attributes.max_health", vindicatorMaxHealth);
         vindicatorJohnnySpawnChance = getDouble("mobs.vindicator.johnny.spawn-chance", vindicatorJohnnySpawnChance);
         vindicatorTakeDamageFromWater = getBoolean("mobs.vindicator.takes-damage-from-water", vindicatorTakeDamageFromWater);
+        vindicatorAlwaysDropExp = getBoolean("mobs.vindicator.always-drop-exp", vindicatorAlwaysDropExp);
     }
 
     public boolean wanderingTraderRidable = false;
@@ -2602,6 +2726,7 @@ public class PurpurWorldConfig {
     public boolean wanderingTraderCanBeLeashed = false;
     public boolean wanderingTraderTakeDamageFromWater = false;
     public boolean wanderingTraderAllowTrading = true;
+    public boolean wanderingTraderAlwaysDropExp = false;
     private void wanderingTraderSettings() {
         wanderingTraderRidable = getBoolean("mobs.wandering_trader.ridable", wanderingTraderRidable);
         wanderingTraderRidableInWater = getBoolean("mobs.wandering_trader.ridable-in-water", wanderingTraderRidableInWater);
@@ -2616,6 +2741,7 @@ public class PurpurWorldConfig {
         wanderingTraderCanBeLeashed = getBoolean("mobs.wandering_trader.can-be-leashed", wanderingTraderCanBeLeashed);
         wanderingTraderTakeDamageFromWater = getBoolean("mobs.wandering_trader.takes-damage-from-water", wanderingTraderTakeDamageFromWater);
         wanderingTraderAllowTrading = getBoolean("mobs.wandering_trader.allow-trading", wanderingTraderAllowTrading);
+        wanderingTraderAlwaysDropExp = getBoolean("mobs.wandering_trader.always-drop-exp", wanderingTraderAlwaysDropExp);
     }
 
     public boolean wardenRidable = false;
@@ -2632,6 +2758,7 @@ public class PurpurWorldConfig {
     public boolean witchControllable = true;
     public double witchMaxHealth = 26.0D;
     public boolean witchTakeDamageFromWater = false;
+    public boolean witchAlwaysDropExp = false;
     private void witchSettings() {
         witchRidable = getBoolean("mobs.witch.ridable", witchRidable);
         witchRidableInWater = getBoolean("mobs.witch.ridable-in-water", witchRidableInWater);
@@ -2643,6 +2770,7 @@ public class PurpurWorldConfig {
         }
         witchMaxHealth = getDouble("mobs.witch.attributes.max_health", witchMaxHealth);
         witchTakeDamageFromWater = getBoolean("mobs.witch.takes-damage-from-water", witchTakeDamageFromWater);
+        witchAlwaysDropExp = getBoolean("mobs.witch.always-drop-exp", witchAlwaysDropExp);
     }
 
     public boolean witherRidable = false;
@@ -2657,6 +2785,7 @@ public class PurpurWorldConfig {
     public boolean witherCanRideVehicles = false;
     public float witherExplosionRadius = 1.0F;
     public boolean witherPlaySpawnSound = true;
+    public boolean witherAlwaysDropExp = false;
     private void witherSettings() {
         witherRidable = getBoolean("mobs.wither.ridable", witherRidable);
         witherRidableInWater = getBoolean("mobs.wither.ridable-in-water", witherRidableInWater);
@@ -2679,6 +2808,7 @@ public class PurpurWorldConfig {
         witherCanRideVehicles = getBoolean("mobs.wither.can-ride-vehicles", witherCanRideVehicles);
         witherExplosionRadius = (float) getDouble("mobs.wither.explosion-radius", witherExplosionRadius);
         witherPlaySpawnSound = getBoolean("mobs.wither.play-spawn-sound", witherPlaySpawnSound);
+        witherAlwaysDropExp = getBoolean("mobs.wither.always-drop-exp", witherAlwaysDropExp);
     }
 
     public boolean witherSkeletonRidable = false;
@@ -2686,6 +2816,7 @@ public class PurpurWorldConfig {
     public boolean witherSkeletonControllable = true;
     public double witherSkeletonMaxHealth = 20.0D;
     public boolean witherSkeletonTakeDamageFromWater = false;
+    public boolean witherSkeletonAlwaysDropExp = false;
     private void witherSkeletonSettings() {
         witherSkeletonRidable = getBoolean("mobs.wither_skeleton.ridable", witherSkeletonRidable);
         witherSkeletonRidableInWater = getBoolean("mobs.wither_skeleton.ridable-in-water", witherSkeletonRidableInWater);
@@ -2697,6 +2828,7 @@ public class PurpurWorldConfig {
         }
         witherSkeletonMaxHealth = getDouble("mobs.wither_skeleton.attributes.max_health", witherSkeletonMaxHealth);
         witherSkeletonTakeDamageFromWater = getBoolean("mobs.wither_skeleton.takes-damage-from-water", witherSkeletonTakeDamageFromWater);
+        witherSkeletonAlwaysDropExp = getBoolean("mobs.wither_skeleton.always-drop-exp", witherSkeletonAlwaysDropExp);
     }
 
     public boolean wolfRidable = false;
@@ -2708,6 +2840,7 @@ public class PurpurWorldConfig {
     public double wolfNaturalRabid = 0.0D;
     public int wolfBreedingTicks = 6000;
     public boolean wolfTakeDamageFromWater = false;
+    public boolean wolfAlwaysDropExp = false;
     private void wolfSettings() {
         wolfRidable = getBoolean("mobs.wolf.ridable", wolfRidable);
         wolfRidableInWater = getBoolean("mobs.wolf.ridable-in-water", wolfRidableInWater);
@@ -2727,6 +2860,7 @@ public class PurpurWorldConfig {
         wolfNaturalRabid = getDouble("mobs.wolf.spawn-rabid-chance", wolfNaturalRabid);
         wolfBreedingTicks = getInt("mobs.wolf.breeding-delay-ticks", wolfBreedingTicks);
         wolfTakeDamageFromWater = getBoolean("mobs.wolf.takes-damage-from-water", wolfTakeDamageFromWater);
+        wolfAlwaysDropExp = getBoolean("mobs.wolf.always-drop-exp", wolfAlwaysDropExp);
     }
 
     public boolean zoglinRidable = false;
@@ -2734,6 +2868,7 @@ public class PurpurWorldConfig {
     public boolean zoglinControllable = true;
     public double zoglinMaxHealth = 40.0D;
     public boolean zoglinTakeDamageFromWater = false;
+    public boolean zoglinAlwaysDropExp = false;
     private void zoglinSettings() {
         zoglinRidable = getBoolean("mobs.zoglin.ridable", zoglinRidable);
         zoglinRidableInWater = getBoolean("mobs.zoglin.ridable-in-water", zoglinRidableInWater);
@@ -2745,6 +2880,7 @@ public class PurpurWorldConfig {
         }
         zoglinMaxHealth = getDouble("mobs.zoglin.attributes.max_health", zoglinMaxHealth);
         zoglinTakeDamageFromWater = getBoolean("mobs.zoglin.takes-damage-from-water", zoglinTakeDamageFromWater);
+        zoglinAlwaysDropExp = getBoolean("mobs.zoglin.always-drop-exp", zoglinAlwaysDropExp);
     }
 
     public boolean zombieRidable = false;
@@ -2758,6 +2894,7 @@ public class PurpurWorldConfig {
     public boolean zombieAggressiveTowardsVillagerWhenLagging = true;
     public boolean zombieBypassMobGriefing = false;
     public boolean zombieTakeDamageFromWater = false;
+    public boolean zombieAlwaysDropExp = false;
     private void zombieSettings() {
         zombieRidable = getBoolean("mobs.zombie.ridable", zombieRidable);
         zombieRidableInWater = getBoolean("mobs.zombie.ridable-in-water", zombieRidableInWater);
@@ -2775,6 +2912,7 @@ public class PurpurWorldConfig {
         zombieAggressiveTowardsVillagerWhenLagging = getBoolean("mobs.zombie.aggressive-towards-villager-when-lagging", zombieAggressiveTowardsVillagerWhenLagging);
         zombieBypassMobGriefing = getBoolean("mobs.zombie.bypass-mob-griefing", zombieBypassMobGriefing);
         zombieTakeDamageFromWater = getBoolean("mobs.zombie.takes-damage-from-water", zombieTakeDamageFromWater);
+        zombieAlwaysDropExp = getBoolean("mobs.zombie.always-drop-exp", zombieAlwaysDropExp);
     }
 
     public boolean zombieHorseRidableInWater = false;
@@ -2787,6 +2925,7 @@ public class PurpurWorldConfig {
     public double zombieHorseMovementSpeedMax = 0.2D;
     public double zombieHorseSpawnChance = 0.0D;
     public boolean zombieHorseTakeDamageFromWater = false;
+    public boolean zombieHorseAlwaysDropExp = false;
     private void zombieHorseSettings() {
         zombieHorseRidableInWater = getBoolean("mobs.zombie_horse.ridable-in-water", zombieHorseRidableInWater);
         zombieHorseCanSwim = getBoolean("mobs.zombie_horse.can-swim", zombieHorseCanSwim);
@@ -2804,6 +2943,7 @@ public class PurpurWorldConfig {
         zombieHorseMovementSpeedMax = getDouble("mobs.zombie_horse.attributes.movement_speed.max", zombieHorseMovementSpeedMax);
         zombieHorseSpawnChance = getDouble("mobs.zombie_horse.spawn-chance", zombieHorseSpawnChance);
         zombieHorseTakeDamageFromWater = getBoolean("mobs.zombie_horse.takes-damage-from-water", zombieHorseTakeDamageFromWater);
+        zombieHorseAlwaysDropExp = getBoolean("mobs.zombie_horse.always-drop-exp", zombieHorseAlwaysDropExp);
     }
 
     public boolean zombieVillagerRidable = false;
@@ -2818,6 +2958,7 @@ public class PurpurWorldConfig {
     public int zombieVillagerCuringTimeMin = 3600;
     public int zombieVillagerCuringTimeMax = 6000;
     public boolean zombieVillagerCureEnabled = true;
+    public boolean zombieVillagerAlwaysDropExp = false;
     private void zombieVillagerSettings() {
         zombieVillagerRidable = getBoolean("mobs.zombie_villager.ridable", zombieVillagerRidable);
         zombieVillagerRidableInWater = getBoolean("mobs.zombie_villager.ridable-in-water", zombieVillagerRidableInWater);
@@ -2836,6 +2977,7 @@ public class PurpurWorldConfig {
         zombieVillagerCuringTimeMin = getInt("mobs.zombie_villager.curing_time.min", zombieVillagerCuringTimeMin);
         zombieVillagerCuringTimeMax = getInt("mobs.zombie_villager.curing_time.max", zombieVillagerCuringTimeMax);
         zombieVillagerCureEnabled = getBoolean("mobs.zombie_villager.cure.enabled", zombieVillagerCureEnabled);
+        zombieVillagerAlwaysDropExp = getBoolean("mobs.zombie_villager.always-drop-exp", zombieVillagerAlwaysDropExp);
     }
 
     public boolean zombifiedPiglinRidable = false;
@@ -2848,6 +2990,7 @@ public class PurpurWorldConfig {
     public boolean zombifiedPiglinJockeyTryExistingChickens = true;
     public boolean zombifiedPiglinCountAsPlayerKillWhenAngry = true;
     public boolean zombifiedPiglinTakeDamageFromWater = false;
+    public boolean zombifiedPiglinAlwaysDropExp = false;
     private void zombifiedPiglinSettings() {
         zombifiedPiglinRidable = getBoolean("mobs.zombified_piglin.ridable", zombifiedPiglinRidable);
         zombifiedPiglinRidableInWater = getBoolean("mobs.zombified_piglin.ridable-in-water", zombifiedPiglinRidableInWater);
@@ -2864,6 +3007,7 @@ public class PurpurWorldConfig {
         zombifiedPiglinJockeyTryExistingChickens = getBoolean("mobs.zombified_piglin.jockey.try-existing-chickens", zombifiedPiglinJockeyTryExistingChickens);
         zombifiedPiglinCountAsPlayerKillWhenAngry = getBoolean("mobs.zombified_piglin.count-as-player-kill-when-angry", zombifiedPiglinCountAsPlayerKillWhenAngry);
         zombifiedPiglinTakeDamageFromWater = getBoolean("mobs.zombified_piglin.takes-damage-from-water", zombifiedPiglinTakeDamageFromWater);
+        zombifiedPiglinAlwaysDropExp = getBoolean("mobs.zombified_piglin.always-drop-exp", zombifiedPiglinAlwaysDropExp);
     }
 
     public float hungerStarvationDamage = 1.0F;
