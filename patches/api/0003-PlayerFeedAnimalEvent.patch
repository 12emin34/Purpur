From a9c7ccafda0a5fa8c590bd072fc980e707664479 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Fri, 3 May 2019 23:39:28 -0500
Subject: [PATCH] PlayerFeedAnimalEvent

---
 .../purpur/event/PlayerFeedAnimalEvent.java   | 63 +++++++++++++++++++
 1 file changed, 63 insertions(+)
 create mode 100644 src/main/java/net/pl3x/purpur/event/PlayerFeedAnimalEvent.java

diff --git a/src/main/java/net/pl3x/purpur/event/PlayerFeedAnimalEvent.java b/src/main/java/net/pl3x/purpur/event/PlayerFeedAnimalEvent.java
new file mode 100644
index 00000000..e2bb0694
--- /dev/null
+++ b/src/main/java/net/pl3x/purpur/event/PlayerFeedAnimalEvent.java
@@ -0,0 +1,63 @@
+package net.pl3x.purpur.event;
+
+import org.bukkit.entity.Animals;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.inventory.ItemStack;
+
+public class PlayerFeedAnimalEvent extends EntityEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private final Player player;
+    private final ItemStack itemStack;
+    private boolean cancel;
+
+    public PlayerFeedAnimalEvent(Animals entity, Player player, ItemStack food) {
+        super(entity);
+        this.player = player;
+        this.itemStack = food;
+    }
+
+    @Override
+    public Animals getEntity() {
+        return (Animals) entity;
+    }
+
+    /**
+     * Returns the player involved in this event
+     *
+     * @return Player who is involved in this event
+     */
+    public Player getPlayer() {
+        return player;
+    }
+
+    /**
+     * Gets the ItemStack being fed to this animal
+     *
+     * @return ItemStack being fed
+     */
+    public ItemStack getItemStack() {
+        return itemStack;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancel;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancel = cancel;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.20.1

