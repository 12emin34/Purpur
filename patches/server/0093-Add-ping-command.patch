From 45840d21a9b5121e6d790b947b56c73b06987daa Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Fri, 13 Mar 2020 22:29:10 -0500
Subject: [PATCH] Add /ping command

---
 .../net/minecraft/server/ArgumentEntity.java  |  2 ++
 .../minecraft/server/CommandDispatcher.java   |  5 ++-
 .../server/CommandListenerWrapper.java        |  1 +
 .../java/net/pl3x/purpur/PurpurConfig.java    |  2 ++
 .../net/pl3x/purpur/command/PingCommand.java  | 34 +++++++++++++++++++
 5 files changed, 43 insertions(+), 1 deletion(-)
 create mode 100644 src/main/java/net/pl3x/purpur/command/PingCommand.java

diff --git a/src/main/java/net/minecraft/server/ArgumentEntity.java b/src/main/java/net/minecraft/server/ArgumentEntity.java
index 1194f91a5..9141976d1 100644
--- a/src/main/java/net/minecraft/server/ArgumentEntity.java
+++ b/src/main/java/net/minecraft/server/ArgumentEntity.java
@@ -69,10 +69,12 @@ public class ArgumentEntity implements ArgumentType<EntitySelector> {
         return ((EntitySelector) commandcontext.getArgument(s, EntitySelector.class)).c((CommandListenerWrapper) commandcontext.getSource());
     }
 
+    public static ArgumentEntity players() { return d(); } // Purpur - OBFHELPER
     public static ArgumentEntity d() {
         return new ArgumentEntity(false, true);
     }
 
+    public static Collection<EntityPlayer> getPlayers(CommandContext<CommandListenerWrapper> commandcontext, String s) throws CommandSyntaxException { return f(commandcontext, s); } // Purpur - OBFHELPER
     public static Collection<EntityPlayer> f(CommandContext<CommandListenerWrapper> commandcontext, String s) throws CommandSyntaxException {
         List<EntityPlayer> list = ((EntitySelector) commandcontext.getArgument(s, EntitySelector.class)).d((CommandListenerWrapper) commandcontext.getSource());
 
diff --git a/src/main/java/net/minecraft/server/CommandDispatcher.java b/src/main/java/net/minecraft/server/CommandDispatcher.java
index 4ace0e79c..5e004f063 100644
--- a/src/main/java/net/minecraft/server/CommandDispatcher.java
+++ b/src/main/java/net/minecraft/server/CommandDispatcher.java
@@ -28,7 +28,7 @@ import org.bukkit.event.server.ServerCommandEvent;
 public class CommandDispatcher {
 
     private static final Logger LOGGER = LogManager.getLogger();
-    private final com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> b = new com.mojang.brigadier.CommandDispatcher();
+    private final com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> b = new com.mojang.brigadier.CommandDispatcher(); private com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> getDispatcher() { return b; } // Purpur - OBFHELPER
 
     public CommandDispatcher(CommandDispatcher.ServerType commanddispatcher_servertype) {
         this(); // CraftBukkit
@@ -105,6 +105,7 @@ public class CommandDispatcher {
             CommandIdleTimeout.a(this.b);
             CommandStop.a(this.b);
             CommandWhitelist.a(this.b);
+            net.pl3x.purpur.command.PingCommand.register(getDispatcher()); // Purpur
         }
 
         if (commanddispatcher_servertype.d) {
@@ -335,10 +336,12 @@ public class CommandDispatcher {
 
     }
 
+    public static LiteralArgumentBuilder<CommandListenerWrapper> register(String s) { return a(s); } // Purpur - OBFHELPER
     public static LiteralArgumentBuilder<CommandListenerWrapper> a(String s) {
         return LiteralArgumentBuilder.literal(s);
     }
 
+    public static <T> RequiredArgumentBuilder<CommandListenerWrapper, T> argument(String s, ArgumentType<T> argumenttype) { return a(s, argumenttype); } // Purpur - OBFHELPER
     public static <T> RequiredArgumentBuilder<CommandListenerWrapper, T> a(String s, ArgumentType<T> argumenttype) {
         return RequiredArgumentBuilder.argument(s, argumenttype);
     }
diff --git a/src/main/java/net/minecraft/server/CommandListenerWrapper.java b/src/main/java/net/minecraft/server/CommandListenerWrapper.java
index fa0f247e5..c8d53a854 100644
--- a/src/main/java/net/minecraft/server/CommandListenerWrapper.java
+++ b/src/main/java/net/minecraft/server/CommandListenerWrapper.java
@@ -179,6 +179,7 @@ public class CommandListenerWrapper implements ICompletionProvider, com.destroys
         }
     }
 
+    public EntityPlayer getPlayerOrException() throws CommandSyntaxException { return h(); } // Purpur - OBFHELPER
     public EntityPlayer h() throws CommandSyntaxException {
         if (!(this.k instanceof EntityPlayer)) {
             throw CommandListenerWrapper.a.create();
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index f7e5d12cf..066ae1fec 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -132,9 +132,11 @@ public class PurpurConfig {
 
     public static String afkBroadcastAway = "§e§o%s is now AFK";
     public static String afkBroadcastBack = "§e§o%s is no longer AFK";
+    public static String pingCommandOutput = "§a%s's ping is %sms";
     private static void messages() {
         afkBroadcastAway = getString("settings.messages.afk-broadcast-away", afkBroadcastAway);
         afkBroadcastBack = getString("settings.messages.afk-broadcast-back", afkBroadcastBack);
+        pingCommandOutput = getString("settings.messages.ping-command-output", pingCommandOutput);
     }
 
     public static String serverModName = "Purpur";
diff --git a/src/main/java/net/pl3x/purpur/command/PingCommand.java b/src/main/java/net/pl3x/purpur/command/PingCommand.java
new file mode 100644
index 000000000..4b0f38b0a
--- /dev/null
+++ b/src/main/java/net/pl3x/purpur/command/PingCommand.java
@@ -0,0 +1,34 @@
+package net.pl3x.purpur.command;
+
+import net.minecraft.server.ArgumentEntity;
+import net.minecraft.server.CommandDispatcher;
+import net.minecraft.server.CommandListenerWrapper;
+import net.minecraft.server.EntityPlayer;
+import net.pl3x.purpur.PurpurConfig;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
+
+import java.util.Collection;
+import java.util.Collections;
+
+public class PingCommand {
+    public static void register(com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> dispatcher) {
+        dispatcher.register(CommandDispatcher.register("ping")
+                .requires((listener) -> {
+                    return listener.hasPermission(2);
+                })
+                .executes((context) -> {
+                    return execute(context.getSource(), Collections.singleton(context.getSource().getPlayerOrException()));
+                })
+                .then(CommandDispatcher.argument("targets", ArgumentEntity.players()).executes((context) -> {
+                    return execute(context.getSource(), ArgumentEntity.getPlayers(context, "targets"));
+                }))
+        ).setPermission("bukkit.command.ping");
+    }
+
+    private static int execute(CommandListenerWrapper sender, Collection<EntityPlayer> targets) {
+        for (EntityPlayer player : targets) {
+            sender.sendMessage(CraftChatMessage.fromString(PurpurConfig.pingCommandOutput)[0], false);
+        }
+        return targets.size();
+    }
+}
-- 
2.26.2

