From 2ee51ebf1719ba365b215e4cda26e22aa2a2f017 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Sat, 13 Jul 2019 15:56:22 -0500
Subject: [PATCH] Tulips change fox type

---
 .../java/net/minecraft/server/EntityFox.java  | 33 +++++++++++++++++--
 src/main/java/net/minecraft/server/Items.java |  4 +--
 .../net/pl3x/purpur/PurpurWorldConfig.java    |  2 ++
 3 files changed, 34 insertions(+), 5 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityFox.java b/src/main/java/net/minecraft/server/EntityFox.java
index 4f53090d3d..13afd7bcde 100644
--- a/src/main/java/net/minecraft/server/EntityFox.java
+++ b/src/main/java/net/minecraft/server/EntityFox.java
@@ -37,9 +37,9 @@ public class EntityFox extends EntityAnimal {
     private static final Predicate<Entity> bD = (entity) -> {
         return !entity.bm() && IEntitySelector.e.test(entity);
     };
-    private PathfinderGoal bE;
-    private PathfinderGoal bF;
-    private PathfinderGoal bG;
+    private PathfinderGoal bE; private PathfinderGoal attackAnimalGoal() { return bE; } // Purpur - OBFHELPER
+    private PathfinderGoal bF; private PathfinderGoal attackTurtleGoal() { return bF; } // Purpur - OBFHELPER
+    private PathfinderGoal bG; private PathfinderGoal attackFishGoal() { return bG; } // Purpur - OBFHELPER
     private float bH;
     private float bI;
     private float bJ;
@@ -245,6 +245,11 @@ public class EntityFox extends EntityAnimal {
     }
 
     private void initializePathFinderGoals() {
+        // Purpur start - do not add duplicate goals
+        this.targetSelector.a(attackAnimalGoal());
+        this.targetSelector.a(attackTurtleGoal());
+        this.targetSelector.a(attackFishGoal());
+        // Purpur end
         if (this.getFoxType() == EntityFox.Type.RED) {
             this.targetSelector.a(4, this.bE);
             this.targetSelector.a(4, this.bF);
@@ -277,6 +282,7 @@ public class EntityFox extends EntityAnimal {
 
     public void setFoxType(EntityFox.Type entityfox_type) {
         this.datawatcher.set(EntityFox.bw, entityfox_type.c());
+        initializePathFinderGoals(); // Purpur - fix API bug not updating pathfinders on type change
     }
 
     private List<UUID> eE() {
@@ -620,6 +626,27 @@ public class EntityFox extends EntityAnimal {
         return !hasRider() ? super.getJumpHeight() : 0.5F;
     }
 
+    @Override
+    public boolean a(EntityHuman entityhuman, EnumHand enumhand) {
+        if (world.purpurConfig.foxTypeChangesWithTulips) {
+            ItemStack itemstack = entityhuman.b(enumhand);
+            if (getFoxType() == Type.RED && itemstack.getItem() == Items.whiteTulip()) {
+                setFoxType(Type.SNOW);
+                if (!entityhuman.abilities.canInstantlyBuild) {
+                    itemstack.subtract(1);
+                }
+                return true;
+            } else if (getFoxType() == Type.SNOW && itemstack.getItem() == Items.orangeTulip()) {
+                setFoxType(Type.RED);
+                if (!entityhuman.abilities.canInstantlyBuild) {
+                    itemstack.subtract(1);
+                }
+                return true;
+            }
+        }
+        return super.a(entityhuman, enumhand);
+    }
+
     @Override
     public void onMount(EntityHuman entityhuman) {
         super.onMount(entityhuman);
diff --git a/src/main/java/net/minecraft/server/Items.java b/src/main/java/net/minecraft/server/Items.java
index 54670f64cf..9c9b93f280 100644
--- a/src/main/java/net/minecraft/server/Items.java
+++ b/src/main/java/net/minecraft/server/Items.java
@@ -106,8 +106,8 @@ public class Items {
     public static final Item aX = a(Blocks.ALLIUM, CreativeModeTab.c);
     public static final Item aY = a(Blocks.AZURE_BLUET, CreativeModeTab.c);
     public static final Item aZ = a(Blocks.RED_TULIP, CreativeModeTab.c);
-    public static final Item ba = a(Blocks.ORANGE_TULIP, CreativeModeTab.c);
-    public static final Item bb = a(Blocks.WHITE_TULIP, CreativeModeTab.c);
+    public static final Item ba = a(Blocks.ORANGE_TULIP, CreativeModeTab.c); public static Item orangeTulip() { return ba; } // Purpur - OBFHELPER
+    public static final Item bb = a(Blocks.WHITE_TULIP, CreativeModeTab.c); public static Item whiteTulip() { return bb; } // Purpur - OBFHELPER
     public static final Item bc = a(Blocks.PINK_TULIP, CreativeModeTab.c);
     public static final Item bd = a(Blocks.OXEYE_DAISY, CreativeModeTab.c);
     public static final Item be = a(Blocks.CORNFLOWER, CreativeModeTab.c);
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 89e86ec7c1..bd0c2f98fa 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -344,10 +344,12 @@ public class PurpurWorldConfig {
     public boolean foxRidable = false;
     public boolean foxRidableInWater = false;
     public boolean foxRequireShiftToMount = true;
+    public boolean foxTypeChangesWithTulips = false;
     private void foxSettings() {
         foxRidable = getBoolean("mobs.fox.ridable", foxRidable);
         foxRidableInWater = getBoolean("mobs.fox.ridable-in-water", foxRidableInWater);
         foxRequireShiftToMount = getBoolean("mobs.fox.require-shift-to-mount", foxRequireShiftToMount);
+        foxTypeChangesWithTulips = getBoolean("mobs.fox.tulips-change-type", foxTypeChangesWithTulips);
     }
 
     public boolean ghastRidable = false;
-- 
2.24.0

