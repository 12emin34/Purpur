From e6af557e52c617e3ee4ef0931ce39c2a0829e52b Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Fri, 13 Mar 2020 22:29:10 -0500
Subject: [PATCH] Add /ping command

---
 .../net/minecraft/server/ArgumentEntity.java  |  2 ++
 .../minecraft/server/CommandDispatcher.java   |  5 ++-
 .../server/CommandListenerWrapper.java        |  1 +
 .../net/pl3x/purpur/command/PingCommand.java  | 33 +++++++++++++++++++
 src/main/resources/purpur.lang                |  1 +
 5 files changed, 41 insertions(+), 1 deletion(-)
 create mode 100644 src/main/java/net/pl3x/purpur/command/PingCommand.java

diff --git a/src/main/java/net/minecraft/server/ArgumentEntity.java b/src/main/java/net/minecraft/server/ArgumentEntity.java
index 39a6a9ac0..5568649b7 100644
--- a/src/main/java/net/minecraft/server/ArgumentEntity.java
+++ b/src/main/java/net/minecraft/server/ArgumentEntity.java
@@ -69,10 +69,12 @@ public class ArgumentEntity implements ArgumentType<EntitySelector> {
         return ((EntitySelector) commandcontext.getArgument(s, EntitySelector.class)).c((CommandListenerWrapper) commandcontext.getSource());
     }
 
+    public static ArgumentEntity players() { return d(); } // Purpur - OBFHELPER
     public static ArgumentEntity d() {
         return new ArgumentEntity(false, true);
     }
 
+    public static Collection<EntityPlayer> getPlayers(CommandContext<CommandListenerWrapper> commandcontext, String s) throws CommandSyntaxException { return f(commandcontext, s); } // Purpur - OBFHELPER
     public static Collection<EntityPlayer> f(CommandContext<CommandListenerWrapper> commandcontext, String s) throws CommandSyntaxException {
         List<EntityPlayer> list = ((EntitySelector) commandcontext.getArgument(s, EntitySelector.class)).d((CommandListenerWrapper) commandcontext.getSource());
 
diff --git a/src/main/java/net/minecraft/server/CommandDispatcher.java b/src/main/java/net/minecraft/server/CommandDispatcher.java
index 2d512aa4f..5aa10d16b 100644
--- a/src/main/java/net/minecraft/server/CommandDispatcher.java
+++ b/src/main/java/net/minecraft/server/CommandDispatcher.java
@@ -30,7 +30,7 @@ import org.bukkit.event.server.ServerCommandEvent;
 public class CommandDispatcher {
 
     private static final Logger LOGGER = LogManager.getLogger();
-    private final com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> b = new com.mojang.brigadier.CommandDispatcher();
+    private final com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> b = new com.mojang.brigadier.CommandDispatcher(); private com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> getDispatcher() { return b; } // Purpur - OBFHELPER
 
     // CraftBukkit start
     public final CommandDispatcher init(boolean flag) {
@@ -106,6 +106,7 @@ public class CommandDispatcher {
             CommandIdleTimeout.a(this.b);
             CommandStop.a(this.b);
             CommandWhitelist.a(this.b);
+            net.pl3x.purpur.command.PingCommand.register(getDispatcher()); // Purpur
         }
 
         this.b.findAmbiguities((commandnode, commandnode1, commandnode2, collection) -> {
@@ -332,10 +333,12 @@ public class CommandDispatcher {
 
     }
 
+    public static LiteralArgumentBuilder<CommandListenerWrapper> register(String s) { return a(s); } // Purpur - OBFHELPER
     public static LiteralArgumentBuilder<CommandListenerWrapper> a(String s) {
         return LiteralArgumentBuilder.literal(s);
     }
 
+    public static <T> RequiredArgumentBuilder<CommandListenerWrapper, T> argument(String s, ArgumentType<T> argumenttype) { return a(s, argumenttype); } // Purpur - OBFHELPER
     public static <T> RequiredArgumentBuilder<CommandListenerWrapper, T> a(String s, ArgumentType<T> argumenttype) {
         return RequiredArgumentBuilder.argument(s, argumenttype);
     }
diff --git a/src/main/java/net/minecraft/server/CommandListenerWrapper.java b/src/main/java/net/minecraft/server/CommandListenerWrapper.java
index c988c929f..5c980b70c 100644
--- a/src/main/java/net/minecraft/server/CommandListenerWrapper.java
+++ b/src/main/java/net/minecraft/server/CommandListenerWrapper.java
@@ -178,6 +178,7 @@ public class CommandListenerWrapper implements ICompletionProvider, com.destroys
         }
     }
 
+    public EntityPlayer getPlayerOrException() throws CommandSyntaxException { return h(); } // Purpur - OBFHELPER
     public EntityPlayer h() throws CommandSyntaxException {
         if (!(this.k instanceof EntityPlayer)) {
             throw CommandListenerWrapper.a.create();
diff --git a/src/main/java/net/pl3x/purpur/command/PingCommand.java b/src/main/java/net/pl3x/purpur/command/PingCommand.java
new file mode 100644
index 000000000..dac3083bf
--- /dev/null
+++ b/src/main/java/net/pl3x/purpur/command/PingCommand.java
@@ -0,0 +1,33 @@
+package net.pl3x.purpur.command;
+
+import net.minecraft.server.ArgumentEntity;
+import net.minecraft.server.CommandDispatcher;
+import net.minecraft.server.CommandListenerWrapper;
+import net.minecraft.server.EntityPlayer;
+import net.minecraft.server.LocaleLanguage;
+
+import java.util.Collection;
+import java.util.Collections;
+
+public class PingCommand {
+    public static void register(com.mojang.brigadier.CommandDispatcher<CommandListenerWrapper> dispatcher) {
+        dispatcher.register(CommandDispatcher.register("ping")
+                .requires((listener) -> {
+                    return listener.hasPermission(2);
+                })
+                .executes((context) -> {
+                    return execute(context.getSource(), Collections.singleton(context.getSource().getPlayerOrException()));
+                })
+                .then(CommandDispatcher.argument("targets", ArgumentEntity.players()).executes((context) -> {
+                    return execute(context.getSource(), ArgumentEntity.getPlayers(context, "targets"));
+                }))
+        ).setPermission("bukkit.command.ping");
+    }
+
+    private static int execute(CommandListenerWrapper sender, Collection<EntityPlayer> targets) {
+        for (EntityPlayer player : targets) {
+            sender.sendMessage(LocaleLanguage.translate("commands.purpur.ping", player.getScoreboardDisplayName(), player.ping), false);
+        }
+        return targets.size();
+    }
+}
diff --git a/src/main/resources/purpur.lang b/src/main/resources/purpur.lang
index e925e1374..e81beea7f 100644
--- a/src/main/resources/purpur.lang
+++ b/src/main/resources/purpur.lang
@@ -1,5 +1,6 @@
 {
   "cannot.ride.mob": "You cannot mount that mob",
+  "commands.purpur.ping": "§a%s's ping is %sms",
   "idle.timeout.broadcast.away": "§e§o%s is now AFK",
   "idle.timeout.broadcast.back": "§e§o%s is no longer AFK"
 }
-- 
2.26.2

