From 6c887d74303440f4bef125680fdbac6b6ee626ca Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Tue, 23 Jul 2019 08:28:21 -0500
Subject: [PATCH] Implement configurable villager brain ticks

---
 src/main/java/net/minecraft/server/EntityVillager.java | 6 ++++++
 src/main/java/net/pl3x/purpur/PurpurWorldConfig.java   | 4 ++++
 2 files changed, 10 insertions(+)

diff --git a/src/main/java/net/minecraft/server/EntityVillager.java b/src/main/java/net/minecraft/server/EntityVillager.java
index 3eaac031fb..65cd5f53c1 100644
--- a/src/main/java/net/minecraft/server/EntityVillager.java
+++ b/src/main/java/net/minecraft/server/EntityVillager.java
@@ -53,6 +53,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
     }, MemoryModuleType.MEETING_POINT, (entityvillager, villageplacetype) -> {
         return villageplacetype == VillagePlaceType.r;
     });
+    private final int brainTickOffset; // Purpur
 
     public EntityVillager(EntityTypes<? extends EntityVillager> entitytypes, World world) {
         this(entitytypes, world, VillagerType.PLAINS);
@@ -66,6 +67,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
         this.setCanPickupLoot(true);
         this.setVillagerData(this.getVillagerData().withType(villagertype).withProfession(VillagerProfession.NONE));
         this.bo = this.a(new Dynamic(DynamicOpsNBT.a, new NBTTagCompound()));
+        brainTickOffset = getRandom().nextInt(100); // Purpur
     }
 
     // Purpur start
@@ -167,6 +169,10 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
     @Override
     protected void mobTick() {
         this.world.getMethodProfiler().enter("brain");
+        // Purpur start
+        boolean tick = (world.getTime() + brainTickOffset) % world.purpurConfig.villagerBrainTicks == 0;
+        if (((WorldServer) world).getMinecraftServer().lagging ? tick : world.purpurConfig.villagerUseBrainTicksOnlyWhenLagging || tick)
+        // Purpur end
         this.getBehaviorController().a((WorldServer) this.world, this); // CraftBukkit - decompile error
         this.world.getMethodProfiler().exit();
         if (!this.et() && this.bB > 0) {
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index c9303598fa..c9d21b4f2f 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -742,10 +742,14 @@ public class PurpurWorldConfig {
     public boolean villagerRidable = false;
     public boolean villagerRidableInWater = false;
     public boolean villagerRequireShiftToMount = true;
+    public int villagerBrainTicks = 1;
+    public boolean villagerUseBrainTicksOnlyWhenLagging = true;
     private void villagerSettings() {
         villagerRidable = getBoolean("mobs.villager.ridable", villagerRidable);
         villagerRidableInWater = getBoolean("mobs.villager.ridable-in-water", villagerRidableInWater);
         villagerRequireShiftToMount = getBoolean("mobs.villager.require-shift-to-mount", villagerRequireShiftToMount);
+        villagerBrainTicks = getInt("mobs.villager.brain-ticks", villagerBrainTicks);
+        villagerUseBrainTicksOnlyWhenLagging = getBoolean("mobs.villager.use-brain-ticks-only-when-lagging", villagerUseBrainTicksOnlyWhenLagging);
     }
 
     public boolean villagerTraderRidable = false;
-- 
2.24.0

