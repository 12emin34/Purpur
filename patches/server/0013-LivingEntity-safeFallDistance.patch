From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Sun, 5 May 2019 12:58:45 -0500
Subject: [PATCH] LivingEntity safeFallDistance


diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index cbbef7730e7743c05ddc8011eab77f05829132f5..d0437c2d10c44883c90861666dc2cd8805c4d5ab 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -252,6 +252,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     private boolean skipDropExperience;
     // CraftBukkit start
     public int expToDrop;
+    public float safeFallDistance = 3.0F; // Purpur
     public boolean forceDrops;
     public ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<org.bukkit.inventory.ItemStack>();
     public final org.bukkit.craftbukkit.attribute.CraftAttributeMap craftAttributes;
@@ -352,8 +353,8 @@ public abstract class LivingEntity extends Entity implements Attackable {
             this.tryAddSoulSpeed();
         }
 
-        if (!this.level.isClientSide && this.fallDistance > 3.0F && onGround) {
-            float f = (float) Mth.ceil(this.fallDistance - 3.0F);
+        if (!this.level.isClientSide && this.fallDistance > this.safeFallDistance && onGround) { // Purpur
+            float f = (float) Mth.ceil(this.fallDistance - this.safeFallDistance); // Purpur
 
             if (!state.isAir()) {
                 double d1 = Math.min((double) (0.2F + f / 15.0F), 2.5D);
@@ -1996,7 +1997,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
             MobEffectInstance mobeffect = this.getEffect(MobEffects.JUMP);
             float f2 = mobeffect == null ? 0.0F : (float) (mobeffect.getAmplifier() + 1);
 
-            return Mth.ceil((fallDistance - 3.0F - f2) * damageMultiplier);
+            return Mth.ceil((fallDistance - this.safeFallDistance - f2) * damageMultiplier); // Purpur
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index f404bee067c7666fd4cf4818c9b093d54a43d5de..271535fc770cb5a9b849bebe49b3040c72f616ea 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -347,7 +347,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
 
     @Override
     protected int calculateFallDamage(float fallDistance, float damageMultiplier) {
-        return Mth.ceil((fallDistance * 0.5F - 3.0F) * damageMultiplier);
+        return Mth.ceil((fallDistance * 0.5F - this.safeFallDistance) * damageMultiplier);
     }
 
     protected int getInventorySize() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index a57299a152eb05d49fed58eda6aaa29c0b5f1362..c1e5447a11b5bcdbd34e3d6538f977efd5b4692b 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -12,6 +12,7 @@ import net.minecraft.world.level.LevelReader;
 public class Giant extends Monster {
     public Giant(EntityType<? extends Giant> type, Level world) {
         super(type, world);
+        this.safeFallDistance = 10.0F; // Purpur
     }
 
     // Purpur start
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index 699669aa34cb1476cb5b48719db4b01fe708a7b2..cbaf3438c9f9e1d42467501127da7fa48e0598d9 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -1070,4 +1070,16 @@ public class CraftLivingEntity extends CraftEntity implements LivingEntity {
         getHandle().knockback(strength, directionX, directionZ);
     };
     // Paper end
+
+    // Purpur start
+    @Override
+    public float getSafeFallDistance() {
+        return getHandle().safeFallDistance;
+    }
+
+    @Override
+    public void setSafeFallDistance(float safeFallDistance) {
+        getHandle().safeFallDistance = safeFallDistance;
+    }
+    // Purpur end
 }
