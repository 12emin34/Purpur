From 48791694b27ee61585777c5ea1ca56edf1a0d01e Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Sun, 21 Jul 2019 18:06:20 -0500
Subject: [PATCH] Ladders should not bypass cramming gamerule

---
 src/main/java/net/minecraft/server/Entity.java            | 4 ++++
 src/main/java/net/minecraft/server/EntityArmorStand.java  | 2 +-
 src/main/java/net/minecraft/server/EntityBat.java         | 2 +-
 src/main/java/net/minecraft/server/EntityBoat.java        | 2 +-
 .../java/net/minecraft/server/EntityHorseAbstract.java    | 2 +-
 src/main/java/net/minecraft/server/EntityLiving.java      | 8 +++++---
 .../java/net/minecraft/server/EntityMinecartAbstract.java | 2 +-
 src/main/java/net/minecraft/server/EntityParrot.java      | 2 +-
 src/main/java/net/minecraft/server/IEntitySelector.java   | 7 ++++++-
 src/main/java/net/pl3x/purpur/PurpurConfig.java           | 5 +++++
 10 files changed, 26 insertions(+), 10 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 457d973af..468d6cc3e 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1522,6 +1522,10 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     }
 
     public boolean isCollidable() {
+        return isCollidable(false);
+    }
+
+    public boolean isCollidable(boolean ignoreClimbing) {
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index 3b30e75e3..f7b9c1aa5 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -318,7 +318,7 @@ public class EntityArmorStand extends EntityLiving {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java
index 8a8acf14a..88b94505c 100644
--- a/src/main/java/net/minecraft/server/EntityBat.java
+++ b/src/main/java/net/minecraft/server/EntityBat.java
@@ -54,7 +54,7 @@ public class EntityBat extends EntityAmbient {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 32b7f7805..b5bcd1f80 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -98,7 +98,7 @@ public class EntityBoat extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
index 2177a4370..05a5169c1 100644
--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return !this.isVehicle();
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index eb397b6bc..b4230fcc4 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2613,7 +2613,7 @@ public abstract class EntityLiving extends Entity {
     protected void doTick() {}
 
     protected void collideNearby() {
-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));
+        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this, net.pl3x.purpur.PurpurConfig.fixLaddersBypassingCrammingRule)); // Purpur
 
         if (!list.isEmpty()) {
             int i = this.world.getGameRules().getInt(GameRules.MAX_ENTITY_CRAMMING);
@@ -2751,8 +2751,10 @@ public abstract class EntityLiving extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
-        return this.isAlive() && !this.isClimbing() && this.collides; // CraftBukkit
+    // Purpur start
+    public boolean isCollidable(boolean ignoreClimbing) {
+        return this.isAlive() && (ignoreClimbing || !isClimbing()) && this.collides; // CraftBukkit
+        // Purpur end
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index c5b4057c3..d5a28392a 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -82,7 +82,7 @@ public abstract class EntityMinecartAbstract extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java
index 0eeb11055..7c2c3119b 100644
--- a/src/main/java/net/minecraft/server/EntityParrot.java
+++ b/src/main/java/net/minecraft/server/EntityParrot.java
@@ -351,7 +351,7 @@ public class EntityParrot extends EntityPerchable implements EntityBird {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Purpur
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java
index 56739e6ed..0bac6e424 100644
--- a/src/main/java/net/minecraft/server/IEntitySelector.java
+++ b/src/main/java/net/minecraft/server/IEntitySelector.java
@@ -33,11 +33,16 @@ public final class IEntitySelector {
     }
 
     public static Predicate<Entity> a(Entity entity) {
+        // Purpur start
+        return a(entity, false);
+    }
+    public static Predicate<Entity> a(Entity entity, boolean ignoreClimbing) {
+        // Purpur end
         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();
         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();
 
         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.f.and((entity1) -> {
-            if (!entity1.isCollidable()) {
+            if (!entity1.isCollidable(ignoreClimbing)) { // Purpur
                 return false;
             } else if (entity.world.isClientSide && (!(entity1 instanceof EntityHuman) || !((EntityHuman) entity1).dG())) {
                 return false;
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 0cdb4bbaf..b38de26d6 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -146,6 +146,11 @@ public class PurpurConfig {
         dontSendUselessEntityPackets = getBoolean("settings.dont-send-useless-entity-packets", dontSendUselessEntityPackets);
     }
 
+    public static boolean fixLaddersBypassingCrammingRule = true;
+    private static void fixLaddersBypassingCrammingRule() {
+        fixLaddersBypassingCrammingRule = getBoolean("settings.fix-ladders-bypassing-cramming-rule", fixLaddersBypassingCrammingRule);
+    }
+
     public static boolean fixItemPositionDesync = false;
     private static void fixItemPositionDesync() {
         fixItemPositionDesync = getBoolean("settings.fix-item-position-desync", fixItemPositionDesync);
-- 
2.23.0.rc1

