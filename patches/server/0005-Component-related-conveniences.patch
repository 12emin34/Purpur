From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Tue, 29 Jun 2021 21:37:40 -0500
Subject: [PATCH] Component related conveniences


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index b3459253bddd74ecda2b534d4bd6877b079a467f..4da6ef8affbec3fe3311a5c6282daf7f41ddccbc 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1691,6 +1691,26 @@ public class ServerPlayer extends Player {
     }
     // CraftBukkit end
 
+    // Purpur start
+    public void sendActionBarMessage(@Nullable String message) {
+        if (message != null) {
+            sendActionBarMessage(net.kyori.adventure.text.minimessage.MiniMessage.miniMessage().deserialize(message));
+        }
+    }
+
+    public void sendActionBarMessage(@Nullable net.kyori.adventure.text.Component message) {
+        if (message != null) {
+            sendActionBarMessage(io.papermc.paper.adventure.PaperAdventure.asVanilla(message));
+        }
+    }
+
+    public void sendActionBarMessage(@Nullable Component message) {
+        if (message != null) {
+            displayClientMessage(message, true);
+        }
+    }
+    // Purpur end
+
     @Override
     public void displayClientMessage(Component message, boolean actionBar) {
         this.sendMessage(message, actionBar ? ChatType.GAME_INFO : ChatType.CHAT, Util.NIL_UUID);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index f5852341161b0d632e22af9b3e625ca1e786bd63..b66821b421372a503ae2a4963e67a53d9a0cc537 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1377,6 +1377,62 @@ public abstract class PlayerList {
     }
     // CraftBukkit end
 
+    // Purpur start
+    public void broadcast(@Nullable String message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable String message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable String message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable String message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcast(net.kyori.adventure.text.minimessage.MiniMessage.miniMessage().deserialize(message), type, sender);
+        }
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable net.kyori.adventure.text.Component message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcast(io.papermc.paper.adventure.PaperAdventure.asVanilla(message), type, sender);
+        }
+    }
+
+    public void broadcast(@Nullable Component message) {
+        broadcast(message, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable Component message, ChatType type) {
+        broadcast(message, type, Util.NIL_UUID);
+    }
+
+    public void broadcast(@Nullable Component message, UUID sender) {
+        broadcast(message, ChatType.SYSTEM, sender);
+    }
+
+    public void broadcast(@Nullable Component message, ChatType type, UUID sender) {
+        if (message != null) {
+            broadcastMessage(message, type, sender);
+        }
+    }
+    // Purpur end
+
     public void broadcastMessage(Component message, ChatType type, UUID sender) {
         this.server.sendMessage(message, sender);
         Iterator iterator = this.players.iterator();
diff --git a/src/main/java/net/minecraft/world/damagesource/DamageSource.java b/src/main/java/net/minecraft/world/damagesource/DamageSource.java
index a828cad27fcd39f8bfbaefa97052a2a3b6650ee7..67e559d63c543ff716d610cb04ff9426cc20ae00 100644
--- a/src/main/java/net/minecraft/world/damagesource/DamageSource.java
+++ b/src/main/java/net/minecraft/world/damagesource/DamageSource.java
@@ -234,6 +234,15 @@ public class DamageSource {
         return entityliving1 != null ? new TranslatableComponent(s1, new Object[]{entity.getDisplayName(), entityliving1.getDisplayName()}) : new TranslatableComponent(s, new Object[]{entity.getDisplayName()});
     }
 
+    // Purpur start
+    public Component getLocalizedDeathMessage(String str, LivingEntity entity) {
+        net.kyori.adventure.text.Component name = io.papermc.paper.adventure.PaperAdventure.asAdventure(entity.getDisplayName());
+        net.kyori.adventure.text.minimessage.tag.resolver.TagResolver template = net.kyori.adventure.text.minimessage.tag.resolver.Placeholder.component("player", name);
+        net.kyori.adventure.text.Component component = net.kyori.adventure.text.minimessage.MiniMessage.miniMessage().deserialize(str, template);
+        return io.papermc.paper.adventure.PaperAdventure.asVanilla(component);
+    }
+    // Purpur end
+
     public boolean isFire() {
         return this.isFireSource;
     }
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 59ec3d56e88cf6cee218422481457b944ff25998..8e7d8482f44799d2df6ebea380dc4ff47fd66c3d 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3696,6 +3696,34 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         return SlotAccess.NULL;
     }
 
+    // Purpur Start
+    public void sendMessage(@Nullable String message) {
+        sendMessage(message, Util.NIL_UUID);
+    }
+
+    public void sendMessage(@Nullable String message, UUID sender) {
+        if (org.apache.commons.lang3.StringUtils.isNotEmpty(message)) {
+            sendMessage(net.kyori.adventure.text.minimessage.MiniMessage.miniMessage().deserialize(message), sender);
+        }
+    }
+
+    public void sendMessage(@Nullable net.kyori.adventure.text.Component message) {
+        sendMessage(message, Util.NIL_UUID);
+    }
+
+    public void sendMessage(@Nullable net.kyori.adventure.text.Component message, UUID sender) {
+        if (message != null) {
+            sendMessage(io.papermc.paper.adventure.PaperAdventure.asVanilla(message), sender);
+        }
+    }
+
+    public void sendMessage(@Nullable Component message) {
+        if (message != null) {
+            sendMessage(message, Util.NIL_UUID);
+        }
+    }
+    // Purpur end
+
     @Override
     public void sendMessage(Component message, UUID sender) {}
 
