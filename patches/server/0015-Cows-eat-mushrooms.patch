From 40f87fd6f38438e9c7c65400898ce7a10dd05d99 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Sat, 4 May 2019 01:10:30 -0500
Subject: [PATCH] Cows eat mushrooms

---
 .../java/net/minecraft/server/Entity.java     |  2 +
 .../java/net/minecraft/server/EntityCow.java  | 70 +++++++++++++++++++
 .../net/minecraft/server/EntityLiving.java    |  5 +-
 .../net/pl3x/purpur/PurpurWorldConfig.java    |  2 +
 4 files changed, 77 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index c60d13b89..21b2ff8f8 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1039,6 +1039,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         return false;
     }
 
+    public void playSound(SoundEffect soundeffect, float volume, float pitch) { a(soundeffect, volume, pitch); } // Paper - OBFHELPER
     public void a(SoundEffect soundeffect, float f, float f1) {
         if (!this.isSilent()) {
             this.world.playSound((EntityHuman) null, this.locX(), this.locY(), this.locZ(), soundeffect, this.getSoundCategory(), f, f1);
@@ -2575,6 +2576,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         this.invulnerable = flag;
     }
 
+    public void copyPositionRotation(Entity entity) { this.u(entity); } // Purpur - OBFHELPER
     public void u(Entity entity) {
         this.setPositionRotation(entity.locX(), entity.locY(), entity.locZ(), entity.yaw, entity.pitch);
     }
diff --git a/src/main/java/net/minecraft/server/EntityCow.java b/src/main/java/net/minecraft/server/EntityCow.java
index 723a9fa1e..f56fd7c01 100644
--- a/src/main/java/net/minecraft/server/EntityCow.java
+++ b/src/main/java/net/minecraft/server/EntityCow.java
@@ -34,6 +34,7 @@ public class EntityCow extends EntityAnimal {
         this.goalSelector.a(0, new net.pl3x.purpur.pathfinder.PathfinderGoalHasRider(this)); // Purpur
         this.goalSelector.a(1, new PathfinderGoalPanic(this, 2.0D));
         this.goalSelector.a(2, new PathfinderGoalBreed(this, 1.0D));
+        if (world.purpurConfig.cowFeedMushrooms > 0) this.goalSelector.a(3, new PathfinderGoalTempt(this, 1.25D, RecipeItemStack.a(Items.WHEAT, Blocks.RED_MUSHROOM.getItem(), Blocks.BROWN_MUSHROOM.getItem()), false)); else // Purpur
         this.goalSelector.a(3, new PathfinderGoalTempt(this, 1.25D, RecipeItemStack.a(Items.WHEAT), false));
         this.goalSelector.a(4, new PathfinderGoalFollowParent(this, 1.25D));
         this.goalSelector.a(5, new PathfinderGoalRandomStrollLand(this, 1.0D));
@@ -96,11 +97,80 @@ public class EntityCow extends EntityAnimal {
             // CraftBukkit end
 
             return true;
+            // Purpur start - feed mushroom to change to mooshroom
+        } else if (world.purpurConfig.cowFeedMushrooms > 0 && getEntityType() != EntityTypes.MOOSHROOM && isMushroom(itemstack)) {
+            return feedMushroom(entityhuman, itemstack);
+            // Purpur end
         } else {
             return super.a(entityhuman, enumhand);
         }
     }
 
+    // Purpur start - feed mushroom to change to mooshroom
+    private int redMushroomsFed = 0;
+    private int brownMushroomsFed = 0;
+
+    private boolean isMushroom(ItemStack itemstack) {
+        return itemstack.getItem() == Blocks.RED_MUSHROOM.getItem() || itemstack.getItem() == Blocks.BROWN_MUSHROOM.getItem();
+    }
+
+    private int incrementFeedCount(ItemStack itemstack) {
+        if (itemstack.getItem() == Blocks.RED_MUSHROOM.getItem()) {
+            return ++redMushroomsFed;
+        } else {
+            return ++brownMushroomsFed;
+        }
+    }
+
+    private boolean feedMushroom(EntityHuman entityhuman, ItemStack itemstack) {
+        world.broadcastEntityEffect(this, (byte) 18); // hearts
+        playSound(SoundEffects.ENTITY_COW_MILK, 1.0F, 1.0F);
+        if (incrementFeedCount(itemstack) < world.purpurConfig.cowFeedMushrooms) {
+            if (!entityhuman.abilities.canInstantlyBuild) {
+                itemstack.subtract(1);
+            }
+            return true; // require 5 mushrooms to transform (prevents mushroom duping)
+        }
+        EntityMushroomCow mooshroom = EntityTypes.MOOSHROOM.create(world);
+        if (mooshroom == null) {
+            return false;
+        }
+        if (itemstack.getItem() == Blocks.BROWN_MUSHROOM.getItem()) {
+            mooshroom.setVariant(EntityMushroomCow.Type.BROWN);
+        } else {
+            mooshroom.setVariant(EntityMushroomCow.Type.RED);
+        }
+        mooshroom.setPositionRotation(this.locX(), this.locY(), this.locZ(), this.yaw, this.pitch);
+        mooshroom.setHealth(this.getHealth());
+        mooshroom.setAge(getAge());
+        mooshroom.copyPositionRotation(this);
+        mooshroom.setRenderYawOffset(this.getRenderYawOffset());
+        mooshroom.setHeadRotation(this.getHeadRotation());
+        mooshroom.lastYaw = this.lastYaw;
+        mooshroom.lastPitch = this.lastPitch;
+        if (this.hasCustomName()) {
+            mooshroom.setCustomName(this.getCustomName());
+        }
+        if (CraftEventFactory.callEntityTransformEvent(this, mooshroom, org.bukkit.event.entity.EntityTransformEvent.TransformReason.INFECTION).isCancelled()) {
+            return false;
+        }
+        if (!new com.destroystokyo.paper.event.entity.EntityTransformedEvent(this.getBukkitEntity(), mooshroom.getBukkitEntity(), com.destroystokyo.paper.event.entity.EntityTransformedEvent.TransformedReason.INFECTED).callEvent()) {
+            return false;
+        }
+        this.world.addEntity(mooshroom);
+        this.die();
+        if (!entityhuman.abilities.canInstantlyBuild) {
+            itemstack.subtract(1);
+        }
+        for (int i = 0; i < 15; ++i) {
+            ((WorldServer) world).sendParticles(((WorldServer) world).players, null, Particles.HAPPY_VILLAGER,
+                    locX() + random.nextFloat(), locY() + (random.nextFloat() * 2), locZ() + random.nextFloat(), 1,
+                    random.nextGaussian() * 0.05D, random.nextGaussian() * 0.05D, random.nextGaussian() * 0.05D, 0, true);
+        }
+        return true;
+    }
+    // Purpur end
+
     @Override
     public EntityCow createChild(EntityAgeable entityageable) {
         return (EntityCow) EntityTypes.COW.a(this.world);
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 17ff8a9fc..6ca11091c 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2812,8 +2812,9 @@ public abstract class EntityLiving extends Entity {
         this.aK = f;
     }
 
-    @Override
-    public void l(float f) {
+    public float getRenderYawOffset() { return this.aI; } // Purpur - OBFHELPER
+    public void setRenderYawOffset(float f) { this.l(f); } // Purpur - OBFHELPER
+    @Override public void l(float f) {
         this.aI = f;
     }
 
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index e5cd92e2d..88aa21fe4 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -138,10 +138,12 @@ public class PurpurWorldConfig {
     public boolean cowRidable = false;
     public boolean cowRidableInWater = false;
     public boolean cowRequireShiftToMount = true;
+    public int cowFeedMushrooms = 0;
     private void cowSettings() {
         cowRidable = getBoolean("mobs.cow.ridable", cowRidable);
         cowRidableInWater = getBoolean("mobs.cow.ridable-in-water", cowRidableInWater);
         cowRequireShiftToMount = getBoolean("mobs.cow.require-shift-to-mount", cowRequireShiftToMount);
+        cowFeedMushrooms = getInt("mobs.cow.feed-mushrooms-for-mooshroom", cowFeedMushrooms);
     }
 
     public boolean creeperRidable = false;
-- 
2.24.0

